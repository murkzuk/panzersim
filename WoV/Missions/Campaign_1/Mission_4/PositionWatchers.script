class CC1M4WingmanGroup_WatcherTalk extends CPositionWatcher, CBaseUtilities
{
  final static String Positionable  = "NavPoint_MainPlayerUnitLandingBase";     // кто следимт
  final static Array  ControlPoints = ["MainPlayerUnit"];                       // за кем следим

  // количество зон
  final static Array RegionDefs = [
                                1495.677002,  //NavPoint_WayMainPlayerUnit_6
                                2500.000000,  //Навка бомбежки, вроде
                                3374.701172,  //NavPoint_WayMainPlayerUnit_1
                                3713.125732,  //NavPoint_WayMainPlayerUnit_5
                                5251.548340,  //NavPoint_WayMainPlayerUnit_4
                                5751.734863,  //NavPoint_WayMainPlayerUnit_2
                                6849.337402,  //NavPoint_WayMainPlayerUnit_3
                                6873.115234   //NavPoint_MainPlayerUnit_Attack_1
                                  ];

  final static int ZoneMask0 = 1;
  final static int ZoneMask1 = 2;
  final static int ZoneMask2 = 4;
  final static int ZoneMask3 = 8;
  final static int ZoneMask4 = 16;
  final static int ZoneMask5 = 32;
  final static int ZoneMask6 = 64;
  final static int ZoneMask7 = 128;

  int m_RegionMask = 0;

  Initialize(Component _Mission, String _Name)
  {
    CPositionWatcher::Initialize(_Mission, _Name);
  }

  // service

  boolean IsRing0()
  {
    return 0 != (m_RegionMask & ZoneMask0) ;
  }

  boolean IsRing1()
  {
    return 0 == (m_RegionMask & ZoneMask0) && 0 != (m_RegionMask & ZoneMask1) ;
  }

  boolean IsRing2()
  {
    return 0 == (m_RegionMask & ZoneMask1) && 0 != (m_RegionMask & ZoneMask2) ;
  }

  boolean IsOut()
  {
    return 0 == m_RegionMask;
  }

  // events

  void PointRegionChanged(
      Component _PositionWatcher,
      int       _Point,
      int       _RegionMask
    )
  {
    m_RegionMask = _RegionMask;
    if(GetMission().isDebug)
    {
      logError("[CC1M4WingmanGroup_WatcherTalk::PointRegionChanged] RegoinMask=" + new String(_RegionMask));
      logError( "NavPoint_WayMainPlayerUnit_1  " + new String(GetMission().distance("NavPoint_MainPlayerUnitLandingBase", "MainPlayerUnit")));
      logError("Current Path Name " + new String(GetMission().GetObject("MainPlayerUnit").GetSecondPilot().GetCurrentPathName()));
    }


    if (_RegionMask == 252 && GetMission().GetObject("MainPlayerUnit").GetSecondPilot().GetCurrentPathName() == "WayPointPlayer1")
    {
      if(!GetMission().StartBombers)
      {
        GetMission().StartBombers = true;
        sendEvent(0.0, "GroupUnit_AmericanSkyRiders", "BombAttack", []);
      }
    }
    else if (_RegionMask == 248 && GetMission().GetObject("MainPlayerUnit").GetSecondPilot().GetCurrentPathName() == "WayPointPlayer1")
      sendEvent(0.0, SOID_MissionController, "StartDialog", ["C1M4MoveToForward"]);
    else if (_RegionMask == 224 && GetMission().GetObject("MainPlayerUnit").GetSecondPilot().GetCurrentPathName() == "WayPointPlayer2")
      sendEvent(0.0, SOID_MissionController, "StartDialog", ["C1M4MoveToBackward"]);
    else if (_RegionMask == 0
         && (GetMission().GetObject("MainPlayerUnit").GetSecondPilot().GetCurrentPathName() == "WayPointPlayer1"
         || GetMission().GetObject("MainPlayerUnit").GetSecondPilot().GetCurrentPathName() == "WayPointPlayerAttack"))
      sendEvent(0.0, SOID_MissionController, "StartDialog", ["C1M4AttackBeginning"]);
  }
}
