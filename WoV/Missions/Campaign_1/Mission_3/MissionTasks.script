

 class C1M3WingmanTask extends CWingmanTask
 {
  event void ToHome()
  {
    logError(m_LeaderID);
    SetEnemyReactionType(ERT_FRIGID);
    Wingman_Follow(m_LeaderID);
  }
 }


 class C1M3GroupUnit_VietnamesePeasant_Base_1 extends CBaseUnitGroup
 {
   void Init()
   {
     CBaseUnitGroup::Init();
     ActivateFire(false);
   }
 }

 class C1M3GroupUnit_VietnamesePeasant_Base_2 extends CBaseUnitGroup
 {
   static String NavPointTeleport1 = "NavPoint_Teleport_VietnameseBase_1";
   static String NavPointTeleport2 = "NavPoint_Teleport_VietnameseBase_2";
   static float  _ChooseNavPoint    = 0.5;

   void Init()
   {
     CBaseUnitGroup::Init();
     ActivateMovement(false);
     ForEachUnitTask("ShowUnit", [false]);
   }

  void OnEnemyTargeted(Component _UnitAlerted)
  {
/*
    Matrix NewPos;
    if (rand(0.0, 1.0) >= _ChooseNavPoint)
        NewPos = getPosition((new #GameController()).GetObject(NavPointTeleport1));
    else
        NewPos = getPosition((new #GameController()).GetObject(NavPointTeleport2));

    if (checkMask(_UnitAlerted, [], [CLASSIFICATOR_DEAD_OBJECT]))
       _UnitAlerted.SetPosition( NewPos );

    String TargetedUnit = _UnitAlerted.GetTargetedEnemy();
    if(TargetedUnit.IsStartsWith("MainPlayerUnit"))
    {           */
      _UnitAlerted.ShowUnit(true);
      _UnitAlerted.ActivateMovement(true);
    //}
  }
 }

 class C1M3PeasantTask extends CBaseMilitaryTask
 {
   void OnEnemyTargeted()
   {
     m_Group.OnEnemyTargeted(this);
   }
 }

 class C1M3PeasantTaskStay extends CBasePeasantTask
 {
  void Init()
  {
     ActivateBehavior(false);
  }
 }

class C1M3_Guardians  extends CBaseUnitGroup
{
  void Init()
  {
    if(GetMission().isDebug)
      logWarning("Group  ID=" + getIdentificator(user) + " Guardians INIT ");

    CBaseUnitGroup::Init();
    ActivateMovement(false);
    ActivateRadar(false);
    ActivateFire(false);
  }
}
