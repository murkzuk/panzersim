
//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

//Rifle
class CMooreRifleBulletExplosion
  extends CMachineGunBulletExplosion
{
  float  Damage   = 5.0;
}

class CMooreRifleBulletControl
  extends CMachineGunBulletControl
{
  String    ExplosionId  = "MooreRifleBulletExplosion";
  Component BulletRender = new #StaticEffect<CMachineGunBulletEffect>();
}

class CMooreRifle
  extends CMachineGun
{
  final static String BulletPatternId = "MooreRifleBullet";

  // *** Gun parameters for behavior
  final static int  FirePeriod        = 1200; // ms
  final static int  FirePeriodRandAdd = 100;  // ms

  final static boolean BurstFire      = true;
  final static int  BurstTime         = 4000; // ms
  final static int  BurstTimeRandAdd  = 0;    // ms

  final static int  BurstDelay        = 4000; // ms
  final static int  BurstDelayRandAdd = 2000; // ms

  // gun specific fire mask with priorities
  final static Array GunSpecificFireMask = [
                                [["HUMAN"],[]],  // high priority mask
                                [["AIR"],  []],  // low priority mask
                                [[ ],      []]   // low priority mask: RestrictTo, Exclude
                              ];
}

// Behavior
class CMooreRifleBehavior extends CHumanBehavior
{
  boolean  CanMove   = true;
  boolean  HasRouter = true;
  boolean  HasRadar  = true;


  // *** radar parameters

  float  MaxRadarDistance = 1000; // m
  float  MinRadarDistance = 5;    // m

  int    UpdateRadarPeriod        = 3000; // ms
  int    UpdateRadarPeriodRandAdd = 1000; // ms
}

class CMooreRifleUnit
  extends CHumanUnit
{
  final static float DefaultHitPoints = CHitPoints::MooreRifleUnitHitPoints;

  // Automatic classificators of this object
  final static Array AutomaticClassificators  = ["GROUND", "HUMAN"];

  // =======================================
  // Contruction and initialization
  // =======================================

  void CMooreRifleUnit()
  {
    SetupMesh(new #AnimatedObject<Cnpc_MooreModel>());

    //$TODO animator
    //GetObject("AnimWeapon").EnableAnimator(false);
    SetupWeapon("Weapon", new #Weapon<CMooreRifle>(), ["Fire_A"], new #TargetingAnimator<CHumanTargetingAnimator>());
    SetupBehavior(new #HumanBehavior<CMooreRifleBehavior>());

    // Load additionals animations
    LoadAnimations("ChumansAnimation");
  }

  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CHumanUnit::Construct(_Mission, _PropMap);
  }
}
