//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

class CLoadingScreenMenu
  extends CBaseMenu, CLoadingScreenControls
{
  static String m_MenuClassName = "CLoadingScreenMenu";

  Component m_Progress1  = null;
  Component m_Progress2  = null;

  final WString m_CustomText = getLocalized("Menu","str_OG_CUSTOM");

  final Array m_DifficultyText = [ 
                                   getLocalized("Menu","str_OG_EASY"),
                                   getLocalized("Menu","str_OG_NORMAL"),
                                   getLocalized("Menu","str_OG_HARD")
                                 ];

  WString m_MissionText = getLocalized("Menu","str_CM_MISSION");
  WString m_OFText       = getLocalized("Menu","str_CM_OF");

  void OnInitMenu()
  {
    setVisibleState(GetObject("PressAnyKey"), false);

    Component Background = GetObject("Background");
    m_Progress1 = GetObject("ScreenProgress");
    m_Progress2 = GetObject("LoadingProgress");

    String LevelName = (new #GameController()).GetProgressMissionName();
    if ("" != LevelName)
    {    
      String SkinClass = getStaticClassMember(LevelName, "m_LoadingScreenSkin");
      if ("" != SkinClass)
      {    
        Component Skin = createComponent("MaterialManager");
        loadFromScript(Skin, SkinClass);
        
        m_Background.SetMaterialManager(Skin);
        m_Background.SetMaterial("LoadingScreenCore");

        m_Progress1.SetMaterialManager(Skin);
        m_Progress1.SetMaterial("LoadingScreenFill");
        m_Progress1.SetFadeShowMode();
      }

      m_Progress2.EnableTileMode(true);
      m_Progress2.SetProgressShowMode();
    }
    
    m_Progress1.SetProgress(0);
    m_Progress2.SetProgress(0);

    Component GameSettings = new #GameSettings();
    WString Player = GameSettings.GetUserValue(L"CurrentPlayer", L"");

    WString CampaignName = GameSettings.LoadPlayerValue(Player, L"Name", L"");
    WString PlayerName   = GameSettings.LoadPlayerValue(Player, L"IDName", L"");
    int Status           = GameSettings.LoadPlayerValue(Player, L"Status", 1);
    int MaxStatus        = GameSettings.LoadPlayerValue(Player, L"MaxStatus", 1);
    int Difficulty       = GameSettings.LoadPlayerValue(Player, L"Difficulty", 0);
    
    GetObject("CampaignName").SetText(CampaignName);
    GetObject("PlayerID").SetText(PlayerName);
    GetObject("MissionNumber").SetText(
                          m_MissionText + L" " + new WString(Status) + L" " + m_OFText + L" " + new WString(MaxStatus)
                           );

    if (Difficulty != -1)
      GetObject("DifficultyText").SetText(m_DifficultyText[Difficulty]);
    else
      GetObject("DifficultyText").SetText(m_CustomText);

    GetObject("BriefingText").SetSlaveScroller(GetObject("BriefingScroll"));
    GetObject("WeaponDescription").SetSlaveScroller(GetObject("DescriptionScroll"));

    FillObjectivesList(0.0);
  }

  void OnControlActivated(
      String _ID
    )
  {
    sendEvent(0, SOID_GameController, "BeginMission", []);
  }

  void OnCloseMenu()
  {
    m_Progress1 = null;
    m_Progress2 = null;
  }

  void SetProgress(
      int _Progress
    )
  {
    if (_Progress == 1001)
    {
      setVisibleState(m_Progress1, false);
      setVisibleState(m_Progress2, false);
      setVisibleState(GetObject("ProgressBackGround"), false);
      setVisibleState(GetObject("Frame_1"), false);
      setVisibleState(GetObject("PressAnyKey"), true);
    }
    else
    if (_Progress == 1002)
    {
      setVisibleState(m_Progress1, false);
      setVisibleState(m_Progress2, false);
      setVisibleState(GetObject("ProgressBackGround"), false);
      setVisibleState(GetObject("Frame_1"), false);
      setVisibleState(GetObject("PressAnyKey"), false);
    }
    m_Progress1.SetProgress(_Progress);
    m_Progress2.SetProgress(_Progress);
  }

  void SetLabel(
      WString _Text
    )
  {
  }


  void FillObjectivesList(
      float _Z
    )
  {

    String MissionClassName = (new #GameController()).m_StartMission;
    Array Objectives = getStaticClassMember(MissionClassName, "m_MissionObjectives");

    GetObject("CampaignName").SetText(
        getStaticClassMember(MissionClassName + "_Strings", "str_CampaignName")
      );

    GetObject("MissionName").SetText(
        getStaticClassMember(MissionClassName + "_Strings", "str_MissionName")
      );

    GetObject("Heli1Name").SetText(getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Name"));
    GetObject("Heli2Name").SetText(getStaticClassMember(MissionClassName + "_Strings", "str_Heli2_Name"));
    GetObject("Heli1").SetMaterials(
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Image"),
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Image")
                                   );
    GetObject("Heli2").SetMaterials(
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli2_Image"),
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli2_Image")
                                   );


    GetObject("Slot1").SetText(getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon1_Name"));
    GetObject("Slot2").SetText(getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon2_Name"));

    GetObject("Slot1_Image").SetMaterials(
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon1_Image"),
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon1_Image")
                                   );

    GetObject("Slot2_Image").SetMaterials(
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon2_Image"),
                                     getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon2_Image")
                                   );

    GetObject("WeaponDescription").SetText(getStaticClassMember(MissionClassName + "_Strings", "str_Heli1_Weapon1_Description"));

    WString BriefingText = getStaticClassMember(MissionClassName + "_Strings", "str_BriefingText") + 
                           L"\n\n" + getLocalized("Menu","str_EM_OBJECTIVES") +
                           L"\n" + getLocalized("Menu","str_EM_PRIM_OBJECTIVES");

    for (int Index = 0; Index < Objectives.size(); Index++)
    {
      if ((Objectives[Index][3]) && (Objectives[Index][0] == CMission::MOTID_Primary))
        BriefingText = BriefingText + L"\n" + Objectives[Index][1];
    }

    BriefingText = BriefingText + L"\n" + getLocalized("Menu","str_EM_SEC_OBJECTIVES");

    for (int Index = 0; Index < Objectives.size(); Index++)
    {
      if ((Objectives[Index][3]) && (Objectives[Index][0] == CMission::MOTID_Secondary))
        BriefingText = BriefingText + L"\n" + Objectives[Index][1];
    }

    GetObject("BriefingText").SetText(BriefingText);
    
  }

  void Update(
      float _DelatTime
    )
  {
    GetObject("BriefingText").Update(); // render time update
    GetObject("WeaponDescription").Update();
  }

}
