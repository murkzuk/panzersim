//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

class CDM1Mission extends CDMMission, CDM1Mission_Strings, CMissionStatus
{
  //
  // Contruction and initialization
  //

  static int   FragLimit            = 10;

  String  m_UTCTime           = "16:10:00";
  String  m_LocalTime         = "13:10:00";

  String  m_LocalTime       = "14:20:00";
  String m_TerrainMapTextureName = "Textures/DM1_Map.tex";

  static String m_MissionBriefingPicMaterial = "DM1BriefingPic";

  Array  m_MissionObjectives = [
          ];

  boolean isDebug = true;

  Array m_NavpointsForPlayerMap = [

  ];

  float  CockpitMapMinRange        = 1000.0;
  float  CockpitMapMaxRange        = 4500.0;
  float  CockpitMapNavNameMaxRange = 2000.0;
  int    CockpitMapZoomSteps       = 10;
  Vector MarksInitPoint            = new Vector(1000.0, 1000.0, 0.0);
  Array  CockpitMapAccessBox       = [new Vector(2502, 1582.0, 0.0), new Vector(7002.0, 6082.0, 0.0)];

  final static Array RouterWorkingZones = [
    ];

  final static Array   DefaultMask = [["ENEMY", "MainMesh"], ["NEUTRAL"]];
  final static Array          Mask = [["ENEMY", "MainMesh"], ["NEUTRAL", "InvisibleOnRadar"]];



  boolean OnTarg = false;
  boolean TigerAggr = false;

  boolean MainPlayerStart = false;

  void CDM1Mission()
  {
    // Construct mission
    CDMMission("CDM1Mission", "DM1Content");

    // Set mission properties
    SetMissionTerrain(new #ChunkedTerrain<CMultTestTerrain>());
    SetMissionAtmosphere(new #Atmosphere<MultTestAtmosphere>());
    SetMissionSky(new #SkyObject<CSky01Model>());

    if (CDebugSettings::LoadForest)
      SetMissionForest(new CSTBaseForestC1(GetMissionAtmosphere()));
    if (CDebugSettings::LoadRoads)
      SetMissionRoadsParms(new CBaseRoadC1());
    if (CDebugSettings::LoadGrass)
      RegisterObject("Grass", new #Grass<CBaseGrassC1>());


    SetMissionWorldMatrices(new #WorldMatrices<MultTestWorldMatrices>(), [
        [ LAYER_TERRAIN_NAME, "MultTestLandscapeLayer"   ],
        [ LAYER_TERRAIN_ZONE, "MultTestTerrainZoneLayer" ],
        [ LAYER_ROUTER_ZONE,  "MultTestRouterZoneLayer"     ],
        [ LAYER_MICROTEXTURE_MAP1, "MultTestMicroTextures1" ],
        [ LAYER_TERRAIN_WATERHEIGHTS, "MultTestWaterHeights"]
      ]);

    SetRouterPrecalculatedGraph(
      new #RouterPrecalculatedGraph<CRouterPrecalculatedGraph>());

    SetRouterMap("RouterMap_Layer1", new #RouterMap<CBaseRouterMap>(), 64, RouterWorkingZones);
  }

// TODO

  String GetMainRadioHomePoint()
  {
    return "";
  }

  void StartMission()
  {
    // call inherited
    CDMMission::StartMission();

    fireEvent(0.0, [], "MissionStarted", []);

//    Component console = new #GameController().GetObject(SOID_Console);
//    console.showbehinf(false);

//   Component Player = GetObject("MainPlayerUnit");
//   Player.SetImmortalMode(true);

//   Component Wingman = GetObject("PZ6_1");
//   Wingman.SetImmortalMode(true);

  }

  void Shutdown()
  {

    CDMMission::Shutdown();
  }

  // Destroyed Object
  event void OnObjectDestroyed(
      String _ObjectID
    )
  {
    CDMMission::OnObjectDestroyed(_ObjectID);
  }

  //
  //  Player environment - these functions are used by Hangar screen
  //                       when player prepares for the mission
  //

  // get list of units that can be used as wingmen in this mission
  Array GetAvailableWingmanUnits()
  {
    return [];
  }

  // get list of default weapons config for wingman units in this mission
  Array GetWingmanWeaponsConfig()
  {
    return [];
  }

  // get available of helicopters for create server
  static Array GetAvailablePlayerUnits()
  {
    return [ "CKa50Unit", "CAh64aUnit", "CKa52Unit", "CPah2Unit", "CKa58Unit", "CRah66Unit" ];
  }

  // get list of default weapons config for player units in this mission
  Array GetPlayerWeaponsConfig()
  {
    return
        [
          [0, 0, 0, 0],
          [2,2,2,2],
          [0,2,2,2,2,0],
          [2,2,2,2],
          [0, 0, 0, 0, 0, 0],
          [0,1,0,0,0,0,1,0]
        ];
  }

  // get list of units that can be used as transport wingmen in this mission
  Array GetAvailableTransportUnits()
  {
    return [ "CKa60Unit", "CUh60Unit" ];
  }


  Array GetVoiceSoundTable()
  {
    return
      [
//        [ "id_1", "Resources/file1.wav" ],
//        [ "id_2", "Resources/file2.wav" ]
      ];
  }

  static void SetDefaultMultiplayerSettings()
  {
    FragLimit   = 0;
    TimeLimit   = 0;
    ControlMode = MCM_Both;
    AvailablePlayerUnits = [ true, true, true, true, true, true ];
  }

 }

 class CDM1MissionDescriptor
  extends CMissionDescriptor
{
  CDM1MissionDescriptor()
  {
    m_MissionName = "CDM1Mission";
    m_ThumbName   = "dm1 thumb";
  }
}
