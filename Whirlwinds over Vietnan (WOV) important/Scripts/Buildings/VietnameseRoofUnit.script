//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

// Unit Explosion
class CVietnameseRoofExplosion
  extends CBuildingExplosion

{
  float  Damage   = 10.0;
  float  Radius   = 5.0;
  String    SoundId  = "VietnameseRoofExplosionSound";
}

class CVietnameseRoofUnit
  extends CGroundBuilding
{

  final static float DefaultHitPoints = CHitPoints::VietnameseRoofUnitHitPoints;

  static String PrevExplosionID = "VietnameseRoofExplosion";

  // Automatic classificators of this object
  final static Array AutomaticClassificators  = ["STRUCTURE"];


  // =======================================
  // Contruction and initialization
  // =======================================

  void CVietnameseRoofUnit()
  {
    SetupMesh(new #AnimatedObject<Cbld_VietnameseRoofModel>(), [150, 4]);
  }

  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CGroundBuilding::Construct(_Mission, _PropMap);

    GetObject("StateControl").SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BULLET, 0.00f);
  }
}

 class CVietnameseRoofGameUnit extends CVietnameseRoofUnit
 {
  // Special for radar view
  // This object GameObject
  final static Array AutomaticClassificators  = ["STRUCTURE", "GROUND"];

  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CGroundBuilding::Construct(_Mission, _PropMap);

    GetObject("StateControl").SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BULLET, 10.00f);
  }

  event void OnHitByEnemy(
      String _EnemyID
    )
  {
    CBuildingStateControl::OnHitByEnemy(_EnemyID);
    Component Mission = (new #GameController()).GetMission();
    if (null == Mission)
      return null;

   Mission.OnHitByEnemyGameObject(getIdentificator(this), _EnemyID);
  }
 }
