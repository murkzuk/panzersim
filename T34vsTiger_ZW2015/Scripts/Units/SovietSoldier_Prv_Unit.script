//-------------------------------------------------------------------

//-------------------------------------------------------------------
class CSoviet_PrvtLoadTransportAnim
{
  final static String  AnimationName     = "load";
  final static float   AnimationTime     = 1.0;
}

class CSoviet_PrvtUnloadTransportAnim
{
  final static String  AnimationName     = "unload";
  final static float   AnimationTime     = 1.0;
}

//Rifle
class CSoviet_PrvtBulletExplosion
  extends CRifleBulletExplosion
{
  float  Damage   = 5.0;
}

class CSoviet_PrvtFakeBulletControl
  extends CFakeRifleBulletControl
{
  String    ExplosionId  = "SovietSoldierRifleBulletExplosion";
  Component BulletRender = null; //new #StaticEffect<CRifleBulletEffect>();
}

class CSoviet_Prvt
  extends CRifle
{
  final static String BulletPatternId = "SovietSoldierRifleFakeBullet";
  final static String FireSoundId     = "MosinRifleFireSound";

  Component BurstFireSound  = null; //new #Emitter<CM60RifleFireSound>();

  final static float LockAngleHMin = - 46;
  final static float LockAngleHMax =   46;
  final static float LockAngleVMin = - 46;
  final static float LockAngleVMax =   46;

  // *** Rifle parameters for behavior
  final static int  FirePeriod        = 8000; // ms
  final static int  FirePeriodRandAdd = 1000;  // ms

  final static float MinDistance      = 1;
  final static float MaxDistance      = 250;

  final static boolean BurstFire      = false;
  final static int  BurstTime         = 2000; // ms
  final static int  BurstTimeRandAdd  = 0;    // ms

  final static int  BurstDelay        = 3000; // ms
  final static int  BurstDelayRandAdd = 2000; // ms

  final static int     AutoRepeatDelay  = 110;

  // gun specific fire mask with priorities
  final static Array GunSpecificFireMask = [
                                [["HUMAN"],[]],  // high priority mask
                                [["AIR"],  []],  // low priority mask
                                [[],       []]   // low priority mask: RestrictTo, Exclude
                              ];
}

class CSoviet_PrvtBehaviorParams extends CBaseBehaviorParams
{
  float MaxAttackSpeed    = 0.0;
}

class CSoviet_PrvtBehavior
  extends CHumanBehavior
{
  final static Component SpecParams = new CSoviet_PrvtBehaviorParams();

  boolean  CanMove   = true;
  boolean  HasRouter = false;
  boolean  HasRadar  = true;


  // *** radar parameters

  float  MaxRadarDistance = 500; // m
  float  MinRadarDistance = 1;    // m

  float   AttackDistanceMin           =  1.0;
  float   AttackDistanceMax           = 500.0;


  int    UpdateRadarPeriod        = 7000; // ms
  int    UpdateRadarPeriodRandAdd = 1000; // ms
}


class CSoviet_PrvtUnit
  extends CHumanUnit, CPushObject    //
{
  final static float DefaultHitPoints = CHitPoints::SovietTrooperUnitHitPoints;

  Vector GravityAccelerate    = CWorldPhysics::GravityVector;

  boolean   m_PassiveUnit           = true;  

  final static boolean CanStayAttack = true;   //
  static category UnitType = CLASSIFICATOR_T34_SOLDER;
  // Automatic classificators of this object
  final static Array AutomaticClassificators  = ["GROUND", "HUMAN"];

  final static String DefaultSurfaceControl = "PutonGroundLandingJoints";

  static Array  LandingJoints = ["WalkPoint"];
/*   */
  event void OnSuccessTouchTrigger( float _Energy )
  {
    // create new trigger
    Component PhysicsController = GetPhysicsController();
    if (null != PhysicsController)
      PhysicsController.CreateTouchTrigger(0.0);

    Component StateControl = GetStateControl();
    if (null != StateControl)
    {
      float HitPoints = StateControl.GetHitPoints() - _Energy * EnergyToHP;
      StateControl.SetHitPoints(HitPoints);

      if ((HitPoints <= 0.0) && (!m_Objectdestroyed))
      {
        user.DestroyObject();
        m_Objectdestroyed = true;
      }
     }        
} 
  // =======================================
  // Contruction and initialization
  // =======================================

  void CSoviet_PrvtUnit()
  {
    SetupMesh(new #AnimatedObject<Chum_SovietArmyManModel>(), [1]);          //  hum_Soviet_PrvtModel  hum_Soviet_TroopModel

    // Setup default substance id
    SetupObjectSubstance(CSubstances::Body);

    //$TODO animator  //    //     // //        
      // GetObject("AnimWeapon").EnableAnimator(true);
     SetupWeapon("Gun", new #Weapon<CSoviet_Prvt>(), ["Fire_A"], null);
   SetupBehavior(new #HumanBehavior<CSoviet_PrvtBehavior>());

  //    Load additionals animations
   LoadAnimations("ChumansAnimation");
//   LoadAnimations("CwalkAnimation");
   LoadAnimations("CDeathAnimation");

    //SetupLoadTransportAnimation(new #LineAnimator<CSoviet_PrvtLoadTransportAnim>(),
    //                            new #LineAnimator<CSoviet_PrvtUnloadTransportAnim>()
    //                            );

  }

  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CHumanUnit::Construct(_Mission, _PropMap);
  }
}
