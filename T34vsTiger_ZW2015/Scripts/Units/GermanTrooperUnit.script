//-------------------------------------------------------------------
/*
  Array  Animation = ["Auchtung", [ "l_Arm_Left",1, 5], [ "l_Arm_Right",1, 5], [ "l_Bedro_Left",1, 5], [ "l_Bedro_Right",1, 5], [ "l_Elbow_Left",1, 5], [ "l_Elbow_Right",1, 5], [ "l_Foot_Left",1, 5],
                      ["l_Foot_Right",1, 5], [ "l_Golen_Left",1, 5], [ "l_Golen_Right",1, 5], [ "l_Hand_Left",1, 5], [ "l_Hand_Right",1, 5], [ "l_Head", "l_Hips",1, 5], [ "l_Shoulder_Left",1, 5], [ "l_Shoulder_Right",1, 5], [ "l_Spine",1, 5], [ "l_Spine1",1, 5] ];


*/
//-------------------------------------------------------------------
class CGermanTrooperLoadTransportAnim
{
  final static String  AnimationName     = "load";
  final static float   AnimationTime     = 1.0;
}

class CGermanTrooperUnloadTransportAnim
{
  final static String  AnimationName     = "unload";
  final static float   AnimationTime     = 1.0;
}

//Rifle
class CGermanTrooperBulletExplosion
  extends CRifleBulletExplosion
{
  float  Damage   = 5.0;
}

class CGermanTrooperFakeBulletControl
  extends CFakeRifleBulletControl
{
  String    ExplosionId  = "GermanTrooperBulletExplosion";
  Component BulletRender = null; //new #StaticEffect<CRifleBulletEffect>();
}

class CGermanTrooper
  extends CRifle
{
  final static String BulletPatternId = "GermanTrooperFakeBullet";
  final static String FireSoundId     = "98kRifleFireSound";

  Component BurstFireSound  = null; //new #Emitter<CM60RifleFireSound>();

  final static float LockAngleHMin = - 46;
  final static float LockAngleHMax =   46;
  final static float LockAngleVMin = - 46;
  final static float LockAngleVMax =   46;

  // *** Rifle parameters for behavior
  final static int  FirePeriod        = 3200; // ms
  final static int  FirePeriodRandAdd = 500;  // ms

  final static float MinDistance      = 1;
  final static float MaxDistance      = 250;

  final static boolean BurstFire      = false;
  final static int  BurstTime         = 2000; // ms
  final static int  BurstTimeRandAdd  = 0;    // ms

  final static int  BurstDelay        = 3000; // ms
  final static int  BurstDelayRandAdd = 2000; // ms

  final static int     AutoRepeatDelay  = 110;

  // gun specific fire mask with priorities
  final static Array GunSpecificFireMask = [
                                [["HUMAN"],[]],  // high priority mask
                                [["AIR"],  []],  // low priority mask
                                [[],       []]   // low priority mask: RestrictTo, Exclude
                              ];
}

class CGermanTrooperBehaviorParams extends CBaseBehaviorParams
{
  float MaxAttackSpeed    = 0.0;
}

class CGermanTrooperBehavior
  extends CHumanBehavior
{
  final static Component SpecParams = new CGermanTrooperBehaviorParams();

  boolean  CanMove   = true;
  boolean  HasRouter = false;
  boolean  HasRadar  = true;


  // *** radar parameters

  float  MaxRadarDistance = 500.0; // m
  float  MinRadarDistance = 1.0;    // m

  float   AttackDistanceMin           =  1.0;
  float   AttackDistanceMax           = 500.0;

  int    UpdateRadarPeriod        = 7000; // ms
  int    UpdateRadarPeriodRandAdd = 1000; // ms
}


class CGermanTrooperUnit
  extends CHumanUnit
{
  final static float DefaultHitPoints = CHitPoints::GermanTrooperUnitHitPoints;
  
  static category UnitType = CLASSIFICATOR_T34_SOLDER;

   final static boolean CanStayAttack = true;   //    

  // Automatic classificators of this object
  final static Array AutomaticClassificators  = ["GROUND", "HUMAN"];

  final static String DefaultSurfaceControl = "PutonGroundLandingJoints";

  static Array  LandingJoints = ["WalkPoint"];


  // =======================================
  // Contruction and initialization
  // =======================================

  void CGermanTrooperUnit()
  {
    SetupMesh(new #AnimatedObject<Chum_GermanTrooperModel>(), [0]);    // Chum_GermanTrooperModel

    // Setup default substance id
    SetupObjectSubstance(CSubstances::Body);

    //$TODO animator
    //GetObject("AnimWeapon").EnableAnimator(false);  
    SetupWeapon("Weapon", new #Weapon<CGermanTrooper>(), ["Fire_A"], null);   //
    SetupBehavior(new #HumanBehavior<CGermanTrooperBehavior>());

  //    Load additionals animations
   LoadAnimations("ChumansAnimation");
 //  LoadAnimations("CwalkAnimation");
   LoadAnimations("CDeathAnimation");

    //SetupLoadTransportAnimation(new #LineAnimator<CGermanTrooperLoadTransportAnim>(),
    //                            new #LineAnimator<CGermanTrooperUnloadTransportAnim>()
    //                            );
   //$TMP


  }

/*   void SetSurfaceControl()
     {
    if (!DefaultSurfaceControl)
    {
      Time = 4.5;
      PutonGround(LandingJoints);
      EnableSurfaceControl(true);
      return;
    }
 }*/
  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CHumanUnit::Construct(_Mission, _PropMap);
  }
}
