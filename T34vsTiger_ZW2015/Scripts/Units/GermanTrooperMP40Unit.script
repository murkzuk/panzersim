//-------------------------------------------------------------------
/*     , ["l_Spine1",1, 3],["l_Spine",1, 3]

  Array  Animation = [
                      ["turret_a", [ "MG_Arm_Weapon",2, 4], [ "MG_ArmHand_Right",2, 4], [ "MG_ArmElbow_Right",2, 4], [ "MG_Arm_Right",2, 4], [ "MG_ArmShoulder_Right",2, 4], [ "MG_ArmHand",2, 4], [ "MG_ArmElbow_Left",2, 4],
                      ["MG_Arm_Left",2, 4], [ "MG_ArmShoulder_Left",2, 4]],
                      ["gun_a", ["Gun",1, 4]]
                     ];
  Array  Animation = [
                      ["turret_a", [ "MG_Arm_Weapon",1, 5], [ "MG_ArmHand_Right",1, 5], [ "MG_ArmElbow_Right",1, 5], [ "MG_Arm_Right",1, 5], [ "MG_ArmShoulder_Right",1, 5], [ "MG_ArmHand",1, 5], [ "MG_ArmElbow_Left",1, 5],["MG_Arm_Left",1, 5], [ "MG_ArmShoulder_Left",1, 5]],
                      ["gun_a", ["Gun",1, 4]]
                     ];

  String LeftUpAnimName    = "gun_a_leftup";
  String LeftDownAnimName  = "gun_a_leftdn";
  String RightUpAnimName   = "gun_a_rightup";
  String RightDownAnimName = "gun_a_rightdn";

*/
//-------------------------------------------------------------------
class CGermanTrooperMP40LoadTransportAnim
{
  final static String  AnimationName     = "load";
  final static float   AnimationTime     = 1.0;
}

class CGermanTrooperMP40UnloadTransportAnim
{
  final static String  AnimationName     = "unload";
  final static float   AnimationTime     = 1.0;
}
// MachineGun
class CGermanTrooperMP40MachineGun
   extends CMachineGun //CRifle, CPlayerWeapon
{
  final static String FireEffectId     = "MachineGunDTFireEffect";
  final static String BulletPatternId  = "TankT34_76_42MachineGunBullet";
  final static float     FireDeviation   = 0.05;

  Component BurstFireSound  = new #Emitter<CDTMachineGunFireSound>();
  final static Vector  GravityVector   = CPiercing::BulletGravityVector;
  final static boolean HighTrajectory  = false;

  final static boolean CanFireInMove  = true;

  float  LeftEndAngle   = 23.0;
  float  RightEndAngle  = -23.0;
  float  TopEndAngle    = -1.0;
  float  BottomEndAngle = 12.8;
  final static float  BlockedLockAngle  =  4.0;

 // final static float DirectionSpeedH  = 10.0; // deg / sec  • horizontal
 // final static float DirectionSpeedV  =  10.0; // deg / sec  • vertical

  // *** Gun parameters for behavior
  final static int  FirePeriod        = 100; // ms
  final static int  FirePeriodRandAdd = 0; // ms

  final static boolean BurstFire      = true;
  final static int  BurstTime         = 3000; // ms
  final static int  BurstTimeRandAdd  = 1000; // ms

  final static int  BurstDelay        = 2000; // ms
  final static int  BurstDelayRandAdd = 1000; // ms

  final static Array GunSpecificFireMask = [
                                [["HUMAN"],[]] // low priority mask: RestrictTo, Exclude
                              ];

}

class CGermanTrooperMP40MachineGunTargetingAnimatorA
  extends CTargetingAnimator
{
  String HorAnimName    = "turret_a";
   float  AnimationTime = 0.1;
  String VerAnimName    = "gun_a";
   float  AnimationTime = 0.1;

  float  LeftEndAngle   = 23.0;
  float  RightEndAngle  = -23.0;
  float  TopEndAngle    = -1.0;
  float  BottomEndAngle = 12.8;
}


class CGermanTrooperMP40BehaviorParams extends CBaseBehaviorParams
{
  float MaxAttackSpeed    = 0.0;
}

class CGermanTrooperMP40Behavior
  extends CHumanBehavior
{
  final static Component SpecParams = new CGermanTrooperMP40BehaviorParams();

  boolean  CanMove   = true;
  boolean  HasRouter = false;
  boolean  HasRadar  = true;


  // *** radar parameters

  float  MaxRadarDistance = 800; // m
  float  MinRadarDistance = 1.2;    // m
  float  MaxRadarAngle    = 60.0;
  float   AttackDistanceMin           =  1.0;
  float   AttackDistanceMax           = 500.0;

  int    UpdateRadarPeriod        = 500; // ms
  int    UpdateRadarPeriodRandAdd = 0; // ms
}


class CGermanTrooperMP40Unit
  extends CHumanUnit
{
  final static float DefaultHitPoints = CHitPoints::GermanTrooperUnitHitPoints;
  
  static category UnitType = CLASSIFICATOR_T34_SOLDER;

  final static boolean CanStayAttack = true;     //

  // Automatic classificators of this object
  final static Array AutomaticClassificators  = ["GROUND", "HUMAN"];

  final static String DefaultSurfaceControl = "PutonGroundLandingJoints";

  static Array  LandingJoints = ["WalkPoint"];


  // =======================================
  // Contruction and initialization
  // ======================================= hum_GermanSSTrooperMP40

  void CGermanTrooperMP40Unit()
  {
    SetupMesh(new #AnimatedObject<Chum_GermanTrooperMP40Model>(), [1]);

    // Setup default substance id
    SetupObjectSubstance(CSubstances::Body);

    //$TODO animator
    //GetObject("AnimWeapon").EnableAnimator(false);  
    SetupWeapon("MG_Arm_Weapon", new #Weapon<CGermanTrooperMP40MachineGun>(),
    ["Fire_A"], new #TargetingAnimator<CGermanTrooperMP40MachineGunTargetingAnimatorA>());   //
    SetupBehavior(new #HumanBehavior<CGermanTrooperMP40Behavior>());  //

  //    Load additionals animations
   LoadAnimations("ChumansAnimation");
  // LoadAnimations("CwalkAnimation");
   LoadAnimations("CDeathAnimation");
//    LoadAnimations("CSpGunCrewAnimation");
    //SetupLoadTransportAnimation(new #LineAnimator<CGermanSoldierRifleLoadTransportAnim>(),
    //                            new #LineAnimator<CGermanSoldierRifleUnloadTransportAnim>()
    //                            );

  }

  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CHumanUnit::Construct(_Mission, _PropMap);
  }
}