//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

class CMultiEscapeMenu
  extends CBaseMenu, CMultiEscapeControls, CBackgroundsMenu, CMission
{
  static String m_MenuClassName = "CMultiEscapeMenu";

  static WString CamaignName      = CCampaignNames::str_CAMPAIGN1;
  static String  MissionClassName = "CC1M1Mission"; //$TMP

  void OnInitMenu()
  {
    MissionClassName = CStartMissionMenu::MissionClassName;

    SetBackground(CMissionsMenu::CampaignNumber);
    m_MenuController.SetDefaultCommands("", "BackButton");

    GetObject("MissionName").SetText(
        CamaignName + L" - " +
        getStaticClassMember(MissionClassName + "_Strings", "MissionName")
      );

    //$TMP
    GetObject("t_shoots").SetText(L"0");
    GetObject("t_hits").SetText(L"0");
    GetObject("t_aquracy").SetText(L"0");

    Component Mission = new #GameController().GetLoadedMission();
    if (Mission == null)
      logError("[CEscapeMenu] Mission component is null!");

    GetObject("t_killed_tanks").SetText(new WString(Mission.m_PlayerVictims_Tanks));
    GetObject("t_killed_firedots").SetText(new WString(Mission.m_PlayerVictims_FireDots));
    GetObject("t_killed_bmp").SetText(new WString(Mission.m_PlayerVictims_BTRs));
    GetObject("t_killed_auto").SetText(new WString(Mission.m_PlayerVictims_Autos));
    GetObject("t_killed_people").SetText(new WString(Mission.m_PlayerVictims_Humans));

    FillPalyersList();

    // Setup timer
    Component Timer = new #Timer();
    Timer.SetEventHandler(this);
    Timer.SetTickEvent("Update", 0.5);
    Timer.Enable(true);
    RegisterObject("EscTimer", Timer);
  }

  void OnCloseMenu()
  {
    UnregisterObject("EscTimer");
  }

  void OnControlActivated(
      String _ID
    )
  {

    if ("ControlsSettingsButton" == _ID)
      Invoke("ControlsSettingsMenu");
    else
    if ("BackButton" == _ID)
    {
      m_MenuController.GetObject("Cursor").ShowCursor(false);

      Component Game = new #GameController();
      Game.EnableControl("GameMenu", false);
      Game.RestoreCS();
      if ("Single" == Game.GetGameMode())
      {
        Game.SwitchPause();
      }
    }
    else
    if ("QuitButton" == _ID)
    {
      Component Game = new #GameController();
      if ("Single" == Game.GetGameMode())
      {
        Game.RestoreCS();
        Game.SwitchPause();
        Game.UnloadMission();
        Game.CreateMenuController();
        Game.EnableControl("GameMenu", true);
        sendEvent(0.0, SOID_GameController, "QuitToMainMenu", []);
      }
      else
      {

        Component Mission        = Game.GetLoadedMission();
        Component Session = Game.GetGameSession();

        if (Game.GetGameMode() == "Server")
          Session.FireNetEvent("Server_KickAllPlayers", []);

//        Session.DeleteObject(Mission.GetMainPlayerObjectID());
        Game.UnloadMission();

        Game.CloseMultiplayer();
        Session.CleanupPlayersInfo();
        Game.DeleteSession();
        Game.CreateMenuController();
        Game.EnableControl("GameMenu", true);
        sendEvent(0.0, SOID_GameController, "QuitToMainMenu", []);
//        Invoke("MultiPlayerMenu");
      }
    }
  }

  void FillPalyersList()
  {

    GetObject("PlayersList").ClearWithUnregister();
    GetObject("PlayersList").SetListScrollStep(CUIObjectiveElement::GetElementHeight());

    Component Position = new CUIPosition(0.0, 0.0, GetObject("PlayersList").GetUIPosition().Width, 25.0 / 768.0);
    Array Props = [
//                    ["SelectedColor",   new Color(186.0/255.0, 186.0/255.0 ,176.0/255.0),   false],
//                    ["NormalColor",     new Color(122.0/255.0, 122.0/255.0 ,103.0/255.0),     false],
                    ["NameWidth", 0.8, false],
                    ["StatusWidth",0.2, false],
                    ["FontSize", 0.024, false]
                  ];

    Array PlayersInfo = (new #GameController()).GetGameSession().GetPlayersInfo();
    for (int i = 0; i < PlayersInfo.size(); i++)
    {
      logWarning(new String(PlayersInfo[i].Name) + " " + new String(PlayersInfo[i].SessionFrags) + " " + new String(PlayersInfo[i].SessionKills) + " " + new String(PlayersInfo[i].SessionDeaths));
      String NewID = "PalyerElement_" + new String(i + 1);
      CreateUIControl(NewID,
                      "BitmapButton",
                      "CUIPlayerStatusField",
                      Position,
                      Props);

      GetObject(NewID).SetText(new WString(PlayersInfo[i].Name), new WString(PlayersInfo[i].SessionFrags));
      GetObject(NewID).SetZ(0.01f);
      GetObject("PlayersList").AddControl(NewID);
    }
  }

  void Update(
      float _DelatTime
    )
  {
//    GetObject("BriefingText").Update(); // render time update
  }
}
