//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

//-----------------------
// Common bullets classes
//-----------------------
class CMachineGunBulletControl
{
  Component BulletRender = new #StaticEffect<CMachineGunBulletEffect>();
  boolean   IsMotionBlur = false;
//  float     BlurLength   = 0.0;

  float MaxDistance   = 2000.0;
  Array Classificator = [];
  boolean CanKillTree = false;
  Array IsectionMask  = [
                          [],
                          ["FOREST"]
                        ];

/*  boolean OnDetonate(
      Matrix _Position,
      Vector _Direction,
      Component _TargetObject,
      Component _TargetObjectPart,
      float     _Penetration,
      String    _OwnerID,
      int       _InstanceID,
      int      _Substance
                      )
  {
    if(null != _TargetObjectPart)
    {
      logError(_OwnerID + ": fired and hit " + new String(_Substance) + " material." +  " Target object is " + getIdentificator(_TargetObject) + " and joint is " + _TargetObject.GetJointName(_TargetObjectPart));
    }
    else
    {
      //logError("Component is null");
      logError(_OwnerID + ": fired and hit " + new String(_Substance) + " material." +  " Target object is " + getIdentificator(_TargetObject));
    }       

    return true;
  }  */
}

// Fake bullets
class CFakeMachineGunBulletControl
{
  Component BulletRender = new #StaticEffect<CMachineGunBulletEffect>();
  Array   Classificator   = [];
  float   MaxDistance     = 2000.0;
  boolean IsMotionBlur    = false;
  float     BlurLength   = 0.0;
  boolean CanKillTree = false;
  Array     IsectionMask = [
                             [],
                             [ "FOREST" ]
                           ];
}

class CFakeRifleBulletControl
{
  Array   Classificator   = [];
  float   MaxDistance     = 200.0;
  boolean IsMotionBlur    = false;
  boolean CanKillTree = false;
}

class CFakeHEBulletControl
{
  Array     Classificator   = [];
  float     MaxDistance     = 16000.0;
  boolean   IsMotionBlur    = false;
  boolean CanKillTree       = false;

}

class CFakeHeavyGunBulletControl
{
  Array   Classificator   = [];
  float   MaxDistance     = 2000.0;
  boolean IsMotionBlur    = false;
  boolean CanKillTree     = false;

}

class CLightGunBulletControl
{
  Array   Classificator   = [];
  float   MaxDistance     = 2000.0;
  boolean CanKillTree     = false;
  boolean IsMotionBlur    = false;
}

class CLtFlakGunBulletControl
{
  Array     Classificator   = [];
  float     MaxDistance     = 4000.0;
  boolean   IsMotionBlur    = false;
  boolean CanKillTree       = false;
//  int       CollisionMode   = BCM_ARMOUR_PIERCING;  
  Component BulletRender    = new #StaticEffect<CCalibreBulletTraceEffect>();// null;
  Array     IsectionMask = [
                             [],
                             []
                           ];
}

class CCalibreBulletControl
{
  Array     Classificator   = [];
  float     MaxDistance     = 2000.0;
  boolean   IsMotionBlur    = false;
  boolean CanKillTree       = true;
  int       CollisionMode   = BCM_ARMOUR_PIERCING;
  Component BulletRender    = new #StaticEffect<CCalibreBulletTraceEffect>();//     null;
  Array     IsectionMask = [
                             [],
                             []
                           ];
}

class CSubcalibreBulletControl
{
  Array     Classificator   = [];
  float     MaxDistance     = 2000.0;
  boolean   IsMotionBlur    = false;
  boolean CanKillTree       = true;
  int       CollisionMode   = BCM_ARMOUR_PIERCING;
  Component BulletRender    = new #StaticEffect<CCalibreBulletTraceEffect>();// null;//new #StaticEffect<CSubcalibreBulletTraceEffect>();
  Array     IsectionMask = [
                             [],
                             []
                           ];
}

class CHEBulletControl
{
  Array     Classificator   = [];
  float     MaxDistance     = 2000.0;
  boolean   IsMotionBlur    = false;
  boolean CanKillTree       = false;
  int       CollisionMode   = BCM_ARMOUR_PIERCING;    //  BCM_SIMPLE  BCM_PIERCING;    ;
  Component BulletRender    = null;  //  new #StaticEffect<Cwpn_Rd88_HEModel>();
  Array     IsectionMask = [
                             [],
                             []
                           ];
}
class CAntiAirSMCalibreBulletControl
{
  Array     Classificator   = [];
  float     MaxDistance     = 3000.0;
  boolean   IsMotionBlur    = false;
  boolean CanKillTree       = false;
  int       CollisionMode   = BCM_SIMPLE;
  Component BulletRender    = new #StaticEffect<CMachineGunBulletEffect>();// null;
    // fuse settings
  boolean IsProximityFuse  = true;
  float   DetonateDistance = 10.0;

  Array     IsectionMask = [
                             [],
                             []
                           ];
}
class CBombControl
{
  Array    Classificator  = [];
  float    MaxDistance    = 5000.0;  
  boolean  IsMotionBlur   = false;
  boolean  CanKillTree    = true;
  Vector   GravityAccel   = CWorldPhysics::GravityVector;
}

class CMortarControl
{
  Array     Classificator     = [];
  boolean   IsLineAccelerate  = false;
  float     MaxDistance       = 8000.0;
  boolean   IsMotionBlur      = false;
  boolean   CanKillTree       = true;
 // float     ControlAltitude   = 400.0;
  int       CollisionMode     = BCM_SIMPLE;    // BCM_ARMOUR_PIERCING   BCM_PIERCING;    ;   
  Component BulletRender      = null;    //       new #StaticEffect<Cwpn_Rd88_HEModel>();  
  Array     IsectionMask      = [
                                        [],
                                        []
                                 ];
}
// base class for all missile
class CBaseMissileControl
{
  Array   Classificator    = [];

  // laying method
  int     TraceMethod      = BTM_FREEFLY;                  //BTM_PURSUIT  BTM_OUTCROP   BTM_CRUISING  BTM_PURSUIT  BTM_SHED

  // line trace accelerate
  boolean IsLineAccelerate = true;

  // fuse settings
  boolean IsProximityFuse  = false;
  float   DetonateDistance = 10.0;

  // distance altitude for cruising and surface-to-air missiles
  float   ControlAltitude  = 400.0;
  // Collision
  int     CollisionMode   = BCM_PIERCING;
}

class CLightMissileControl
// extends  CBaseMissileControl  
{
  float   Acceleration     = 150.0;
  float   MaxMoveSpeed     = 250.0;
  float   MaxDistance      = 8800.0;
  float   MaxRotSpeed      = 70.0;
  Component BulletRender = new #AnimatedObject<Cwpn_BM13RocketModel>();
  float   MaxLockAngle     = 90.0;
  float   ControlAltitude  = 400.0;
  int     CollisionMode   = BCM_PIERCING;

  String  TraceEffectId    = "";           //LightMissileTraceEffect
  String  FireEffectId     = "";          // LightMissileFireEffect
}

class CHeavyMissileControl
extends  CBaseMissileControl
{
  float   Acceleration     = 150.0;
  float   MaxMoveSpeed     = 270.0;
  float   MaxDistance      = 8800.0;
  float   MaxRotSpeed      = 70.0;
  Component BulletRender = new #AnimatedObject<Cwpn_NebelRocketModel>();      //
  float   MaxLockAngle     = 90.0;

  String  TraceEffectId    = "HeavyMissileTraceEffect";  //   LightMissileTraceEffect
  String  FireEffectId     = "";   //   HeavyMissileFireEffect
}
class CLiteNebelMissileControl
  extends CBaseMissileControl
{
  float   Acceleration     = 150.0;
  float   MaxMoveSpeed     = 270.0;
  float   MaxDistance      = 8800.0;
  float   MaxRotSpeed      = 70.0;
  Component BulletRender = new #AnimatedObject<Cwpn_NebelRocketModel>();
  float   MaxLockAngle     = 90.0;

  // laying method
  int     TraceMethod     = BTM_FREEFLY;
  String  TraceEffectId    = "HeavyMissileTraceEffect";           //LightMissileTraceEffect LightMissileFireEffect
  String  FireEffectId     = "";          //  LightMissileFireEffect

}
//
// Bullets array
//

class CBulletsArray
{
  void CBulletsArray()
  {
    //
    //Units
    //

    //T34_76_42
    RegisterPattern("TankT34_76_42MachineGunBullet",
      new #BulletController<CTankT34_76_42MachineGunBulletControl>());
    RegisterPattern("TankT34_76_42GunCalibreBullet",
      new #BulletController<CTankT34_76_42GunCalibreBulletControl>());
    RegisterPattern("TankT34_76_42GunCalibreBulletDebris",
      new #BulletController<CTankT34_76_42GunCalibreBulletDebrisControl>());
    RegisterPattern("TankT34_76_42GunSubCalibreBullet",
      new #BulletController<CTankT34_76_42GunSubCalibreBulletControl>());
    RegisterPattern("TankT34_76_42GunHEBullet",
      new #BulletController<CTankT34_76_42GunHEBulletControl>());
    RegisterPattern("TankT34_76_42GunHEBulletDebris",
      new #BulletController<CTankT34_76_42GunHEBulletDebrisControl>());

    //T34_85_44
    RegisterPattern("TankT34_85_44MachineGunBullet",
      new #BulletController<CTankT34_85_44MachineGunBulletControl>());
    RegisterPattern("TankT34_85_44GunCalibreBullet",
      new #BulletController<CTankT34_85_44GunCalibreBulletControl>());
    RegisterPattern("TankT34_85_44GunCalibreBulletDebris",
      new #BulletController<CTankT34_85_44GunCalibreBulletDebrisControl>());
    RegisterPattern("TankT34_85_44GunSubCalibreBullet",
      new #BulletController<CTankT34_85_44GunSubCalibreBulletControl>());
    RegisterPattern("TankT34_85_44GunHEBullet",
      new #BulletController<CTankT34_85_44GunHEBulletControl>());
    RegisterPattern("TankT34_85_44GunHEBulletDebris",
      new #BulletController<CTankT34_85_44GunHEBulletDebrisControl>());

      //TankT34Slave_2
    RegisterPattern("TankT34Slave_2MachineGunBullet",
      new #BulletController<CTankT34Slave_2MachineGunBulletControl>());
    RegisterPattern("TankT34Slave_2GunCalibreBullet",
      new #BulletController<CTankT34Slave_2GunCalibreBulletControl>());
    RegisterPattern("TankT34Slave_2GunCalibreBulletDebris",
      new #BulletController<CTankT34Slave_2GunCalibreBulletDebrisControl>());
    RegisterPattern("TankT34Slave_2GunSubCalibreBullet",
      new #BulletController<CTankT34Slave_2GunSubCalibreBulletControl>());
    RegisterPattern("TankT34Slave_2GunHEBullet",
      new #BulletController<CTankT34Slave_2GunHEBulletControl>());
    RegisterPattern("TankT34Slave_2GunHEBulletDebris",
      new #BulletController<CTankT34Slave_2GunHEBulletDebrisControl>());

    //PzII
    RegisterPattern("TankPanzer_IICMachineGunBullet",
      new #BulletController<CTankPanzer_IICMachineGunBulletControl>());
    RegisterPattern("TankPanzer_IICGunSubCalibreBullet",
      new #BulletController<CTankPanzer_IICGunSubCalibreBulletControl>());


     //PzIII_J_L24    
    RegisterPattern("TankPzIII_J_L24MachineGunBullet",
      new #BulletController<CTankPzIII_J_L24MachineGunBulletControl>());
     /* RegisterPattern("TankPzIII_J_L24GunCalibreBullet",
      new #BulletController<CTankPzIII_J_L24GunCalibreBulletControl>());
    RegisterPattern("TankPzIII_J_L24GunCalibreBulletDebris",
      new #BulletController<CTankPzIII_J_L24GunCalibreBulletDebrisControl>()); */
    RegisterPattern("TankPzIII_J_L24GunHEBullet",
      new #BulletController<CTankPzIII_J_L24GunHEBulletControl>());
    RegisterPattern("TankPzIII_J_L24GunHEBulletDebris",
      new #BulletController<CTankPzIII_J_L24GunHEBulletDebrisControl>());

    //PzIII_J_L60
    RegisterPattern("TankPzIII_J_L60MachineGunBullet",
      new #BulletController<CTankPzIII_J_L60MachineGunBulletControl>());
    RegisterPattern("TankPzIII_J_L60GunCalibreBullet",
      new #BulletController<CTankPzIII_J_L60GunCalibreBulletControl>());
    RegisterPattern("TankPzIII_J_L60GunCalibreBulletDebris",
      new #BulletController<CTankPzIII_J_L60GunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzIII_J_L60GunSubCalibreBullet",
      new #BulletController<CTankPzIII_J_L60GunSubCalibreBulletControl>());
    RegisterPattern("TankPzIII_J_L60GunHEBullet",
      new #BulletController<CTankPzIII_J_L60GunHEBulletControl>());
    RegisterPattern("TankPzIII_J_L60GunHEBulletDebris",
      new #BulletController<CTankPzIII_J_L60GunHEBulletDebrisControl>());

    //PzIVG
    RegisterPattern("TankPzIVGMachineGunBullet",
      new #BulletController<CTankPzIVGMachineGunBulletControl>());
    RegisterPattern("TankPzIVGGunCalibreBullet",
      new #BulletController<CTankPzIVGGunCalibreBulletControl>());
    RegisterPattern("TankPzIVGGunCalibreBulletDebris",
      new #BulletController<CTankPzIVGGunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzIVGGunSubCalibreBullet",
      new #BulletController<CTankPzIVGGunSubCalibreBulletControl>());
    RegisterPattern("TankPzIVGGunHEBullet",
      new #BulletController<CTankPzIVGGunHEBulletControl>());
    RegisterPattern("TankPzIVGGunHEBulletDebris",
      new #BulletController<CTankPzIVGGunHEBulletDebrisControl>());

    RegisterPattern("SAUStuG_75L24GunHEBullet",
      new #BulletController<CSAUStuG_75L24GunHEBulletControl>());
    RegisterPattern("SAUStuG_75L24GunHEBulletDebris",
      new #BulletController<CSAUStuG_75L24GunHEBulletDebrisControl>());

     // SAUStuG_F8
    RegisterPattern("SAUStuG_F8GunCalibreBullet",
      new #BulletController<CSAUStuG_F8GunCalibreBulletControl>());
    RegisterPattern("SAUStuG_F8GunCalibreBulletDebris",
      new #BulletController<CSAUStuG_F8GunCalibreBulletDebrisControl>());
    RegisterPattern("SAUStuG_F8GunSubCalibreBullet",
      new #BulletController<CSAUStuG_F8GunSubCalibreBulletControl>());
    RegisterPattern("SAUStuG_F8GunHEBullet",
      new #BulletController<CSAUStuG_F8GunHEBulletControl>());
    RegisterPattern("SAUStuG_F8GunHEBulletDebris",
      new #BulletController<CSAUStuG_F8GunHEBulletDebrisControl>());

     // SAU MARDER II
    RegisterPattern("SAUSdKfz131_MarderIIGunCalibreBullet",
      new #BulletController<CSAUSdKfz131_MarderIIGunCalibreBulletControl>());
    RegisterPattern("SAUSdKfz131_MarderIIGunCalibreBulletDebris",
      new #BulletController<CSAUSdKfz131_MarderIIGunCalibreBulletDebrisControl>());
    RegisterPattern("SAUSdKfz131_MarderIIGunSubCalibreBullet",
      new #BulletController<CSAUSdKfz131_MarderIIGunSubCalibreBulletControl>());
    RegisterPattern("SAUSdKfz131_MarderIIGunHEBullet",
      new #BulletController<CSAUSdKfz131_MarderIIGunHEBulletControl>());
    RegisterPattern("SAUSdKfz131_MarderIIGunHEBulletDebris",
      new #BulletController<CSAUSdKfz131_MarderIIGunHEBulletDebrisControl>());

    // Stum HAUBITZE
    RegisterPattern("SAUSturmHaubitzGunCalibreBullet",
      new #BulletController<CSAUSturmHaubitzGunCalibreBulletControl>());
    RegisterPattern("SAUSturmHaubitzGunCalibreBulletDebris",
      new #BulletController<CSAUSturmHaubitzGunCalibreBulletDebrisControl>());
    RegisterPattern("SAUSturmHaubitzGunSubCalibreBullet",
      new #BulletController<CSAUSturmHaubitzGunSubCalibreBulletControl>());
    RegisterPattern("SAUSturmHaubitzGunHEBullet",
      new #BulletController<CSAUSturmHaubitzGunHEBulletControl>());
    RegisterPattern("SAUSturmHaubitzGunHEBulletDebris",
      new #BulletController<CSAUSturmHaubitzGunHEBulletDebrisControl>());

     //Player TankPzVIAusfE
    RegisterPattern("TankPzVITigerE1_EarlyMachineGunBullet",
      new #BulletController<CTankPzVITigerE1_EarlyMachineGunBulletControl>());
    RegisterPattern("CTankPzVITigerE1_EarlyGunCalibreBulletDebrisControl",
      new #BulletController<CTankPzVITigerE1_EarlyGunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzVIAusfEGunCalibreBullet",
      new #BulletController<CTankPzVITigerE1_EarlyGunCalibreBulletControl>());
    RegisterPattern("TankPzVITigerE1_EarlyGunSubCalibreBullet",
      new #BulletController<CTankPzVITigerE1_EarlyGunSubCalibreBulletControl>());
    RegisterPattern("TankPzVITigerE1_EarlyGunHEBullet",
      new #BulletController<CTankPzVITigerE1_EarlyGunHEBulletControl>());
    RegisterPattern("TankPzVITigerE1_EarlyGunHEBulletDebris",
      new #BulletController<CTankPzVITigerE1_EarlyGunHEBulletDebrisControl>());

     //Player TankPzVIAusfE
    RegisterPattern("TankPzVITigerE1MachineGunBullet",
      new #BulletController<CTankPzVITigerE1MachineGunBulletControl>());
  //  RegisterPattern("TankPzVITigerE1GunCalibreBulletDebris",
  //    new #BulletController<CTankPzVITigerE1GunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzVITigerE1GunCalibreBullet",
      new #BulletController<CTankPzVITigerE1GunCalibreBulletControl>());
    RegisterPattern("TankPzVITigerE1GunSubCalibreBullet",
      new #BulletController<CTankPzVITigerE1GunSubCalibreBulletControl>());
    RegisterPattern("TankPzVITigerE1GunHEBullet",
      new #BulletController<CTankPzVITigerE1GunHEBulletControl>());
    RegisterPattern("TankPzVITigerE1GunHEBulletDebris",
      new #BulletController<CTankPzVITigerE1GunHEBulletDebrisControl>());

    //TankPzVIAusfE
    RegisterPattern("TankPzVIAusfEMachineGunBullet",
      new #BulletController<CTankPzVIAusfEMachineGunBulletControl>());
    RegisterPattern("TankPzVIAusfEGunCalibreBulletDebris",
      new #BulletController<CTankPzVIAusfEGunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzVIAusfEGunCalibreBullet",
      new #BulletController<CTankPzVIAusfEGunCalibreBulletControl>());
    RegisterPattern("TankPzVIAusfEGunSubCalibreBullet",
      new #BulletController<CTankPzVIAusfEGunSubCalibreBulletControl>());
    RegisterPattern("TankPzVIAusfEGunHEBullet",
      new #BulletController<CTankPzVIAusfEGunHEBulletControl>());
    RegisterPattern("TankPzVIAusfEGunHEBulletDebris",
      new #BulletController<CTankPzVIAusfEGunHEBulletDebrisControl>());

    //TankTigerAI
    RegisterPattern("TankPzVI_AI_MachineGunBullet",
      new #BulletController<CTankPzVI_AI_MachineGunBulletControl>());
    RegisterPattern("TankPzVI_AI_GunCalibreBulletDebris",
      new #BulletController<CTankPzVI_AI_GunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzVI_AI_GunCalibreBullet",
      new #BulletController<CTankPzVI_AI_GunCalibreBulletControl>());
    RegisterPattern("TankPzVI_AI_GunSubCalibreBullet",
      new #BulletController<CTankPzVI_AI_GunSubCalibreBulletControl>());
    RegisterPattern("TankPzVI_AI_GunHEBullet",
      new #BulletController<CTankPzVI_AI_GunHEBulletControl>());
    RegisterPattern("TankPzVI_AI_GunHEBulletDebris",
      new #BulletController<CTankPzVI_AI_GunHEBulletDebrisControl>());

     //KINGTigerII
    RegisterPattern("TankPzVI_KingTigerIIMachineGunBullet",
      new #BulletController<CTankPzVI_KingTigerIIMachineGunBulletControl>());
    RegisterPattern("TankPzVI_KingTigerIIGunCalibreBulletDebris",
      new #BulletController<CTankPzVI_KingTigerIIGunCalibreBulletDebrisControl>());
    RegisterPattern("TankPzVI_KingTigerIIGunCalibreBullet",
      new #BulletController<CTankPzVI_KingTigerIIGunCalibreBulletControl>());
    RegisterPattern("TankPzVI_KingTigerIIGunSubCalibreBullet",
      new #BulletController<CTankPzVI_KingTigerIIGunSubCalibreBulletControl>());
    RegisterPattern("TankPzVI_KingTigerIIGunHEBullet",
      new #BulletController<CTankPzVI_KingTigerIIGunHEBulletControl>());
    RegisterPattern("TankPzVI_KingTigerIIGunHEBulletDebris",
      new #BulletController<CTankPzVI_AI_GunHEBulletDebrisControl>());

    //Tank_Panther_D_AI
//    RegisterPattern("Tank_Panther_D_AIMachineGunBullet",
//      new #BulletController<CTank_Panther_D_AIMachineGunBulletControl>());
    RegisterPattern("Tank_Panther_D_AIGunCalibreBulletDebris",
      new #BulletController<CTank_Panther_D_AIGunCalibreBulletDebrisControl>());
    RegisterPattern("Tank_Panther_D_AIGunCalibreBullet",
      new #BulletController<CTank_Panther_D_AIGunCalibreBulletControl>());
    RegisterPattern("Tank_Panther_D_AIGunSubCalibreBullet",
      new #BulletController<CTank_Panther_D_AIGunSubCalibreBulletControl>());
    RegisterPattern("Tank_Panther_D_AIGunHEBullet",
      new #BulletController<CTank_Panther_D_AIGunHEBulletControl>());
    RegisterPattern("Tank_Panther_D_AIGunHEBulletDebris",
      new #BulletController<CTank_Panther_D_AIGunHEBulletDebrisControl>());

    //Tank_Panther_D_Playable
    RegisterPattern("Tank_Panther_D_PlayableMachineGunBullet",
      new #BulletController<CTank_Panther_D_PlayableMachineGunBulletControl>());
    RegisterPattern("Tank_Panther_D_PlayableGunCalibreBulletDebris",
      new #BulletController<CTank_Panther_D_PlayableGunCalibreBulletDebrisControl>());
    RegisterPattern("Tank_Panther_D_PlayableGunCalibreBullet",
      new #BulletController<CTank_Panther_D_PlayableGunCalibreBulletControl>());
    RegisterPattern("Tank_Panther_D_PlayableGunSubCalibreBullet",
      new #BulletController<CTank_Panther_D_PlayableGunSubCalibreBulletControl>());
    RegisterPattern("Tank_Panther_D_PlayableGunHEBullet",
      new #BulletController<CTank_Panther_D_PlayableGunHEBulletControl>());
    RegisterPattern("Tank_Panther_D_PlayableGunHEBulletDebris",
      new #BulletController<CTank_Panther_D_PlayableGunHEBulletDebrisControl>());
      
    //BtrHanomag251AusfC
    RegisterPattern("BtrHanomag251AusfCMachineGunBullet",
      new #BulletController<CBtrHanomag251AusfCMachineGunBulletControl>());

    //BtrM3A1Halftruck
    RegisterPattern("BtrM3A1HalftruckMachineGunBullet",
      new #BulletController<CBtrM3A1HalftruckMachineGunBulletControl>());

    //Zis3
    RegisterPattern("GunZis3GunCalibreBullet",
      new #BulletController<CGunZis3GunCalibreBulletControl>());
    RegisterPattern("GunZis3GunCalibreBulletDebris",
      new #BulletController<CGunZis3GunCalibreBulletDebrisControl>());
    RegisterPattern("GunZis3GunSubCalibreBullet",
      new #BulletController<CGunZis3GunSubCalibreBulletControl>());
    RegisterPattern("GunZis3GunHEBullet",
      new #BulletController<CGunZis3GunHEBulletControl>());
    RegisterPattern("GunZis3GunHEBulletDebris",
      new #BulletController<CGunZis3GunHEBulletDebrisControl>());

    //Pak40
    RegisterPattern("GunPak40GunCalibreBullet",
      new #BulletController<CGunPak40GunCalibreBulletControl>());
    RegisterPattern("GunPak40GunCalibreBulletDebris",
      new #BulletController<CGunPak40GunCalibreBulletDebrisControl>());
    RegisterPattern("GunPak40GunSubCalibreBullet",
      new #BulletController<CGunPak40GunSubCalibreBulletControl>());
    RegisterPattern("GunPak40GunHEBullet",
      new #BulletController<CGunPak40GunHEBulletControl>());
    RegisterPattern("GunPak40GunHEBulletDebris",
      new #BulletController<CGunPak40GunHEBulletDebrisControl>());

    //Pak43/41
    RegisterPattern("GunHvyPaK43GunCalibreBullet",
      new #BulletController<CGunHvyPaK43GunCalibreBulletControl>());
    RegisterPattern("GunHvyPaK43GunCalibreBulletDebris",
      new #BulletController<CGunHvyPaK43GunCalibreBulletDebrisControl>());
    RegisterPattern("GunHvyPaK43SubCalibreBullet",
      new #BulletController<CGunHvyPaK43GunSubCalibreBulletControl>());
    RegisterPattern("GunHvyPaK43HEBullet",
      new #BulletController<CGunHvyPaK43GunHEBulletControl>());
    RegisterPattern("GunHvyPaK43HEBulletDebris",
      new #BulletController<CGunHvyPaK43GunHEBulletDebrisControl>());

    //Flak38
    RegisterPattern("GunFlak38_42GunCalibreBullet",
      new #BulletController<CGunFlak38_42GunCalibreBulletControl>());
 //   RegisterPattern("GunFlak38_42GunCalibreBulletDebris",
 //     new #BulletController<CGunFlak38_42GunCalibreBulletDebrisControl>());
    RegisterPattern("GunFlak38_42GunSubCalibreBullet",
    new #BulletController<CGunFlak38_42GunSubCalibreBulletControl>());

    //Flak88
    RegisterPattern("GunFlak88GunCalibreBullet",
      new #BulletController<CGunFlak88GunCalibreBulletControl>());
    RegisterPattern("GunFlak88GunCalibreBulletDebris",
      new #BulletController<CGunFlak88GunCalibreBulletDebrisControl>());
    RegisterPattern("GunFlak88GunSubCalibreBullet",
      new #BulletController<CGunFlak88GunSubCalibreBulletControl>());
    RegisterPattern("GunFlak88GunHEBullet",
      new #BulletController<CGunFlak88GunHEBulletControl>());
    RegisterPattern("GunFlak88GunHEBulletDebris",
      new #BulletController<CGunFlak88GunHEBulletDebrisControl>());

     //SU152 152mm SPGun
    RegisterPattern("GunSAUSU152_GunHEBullet",
    new #BulletController<CSAUSU152_GunHEBulletControl>());
    RegisterPattern("GunSAUSU152_GunHEBulletDebris",
    new #BulletController<CSAUSU152_GunHEBulletDebrisControl>());

     //SU122mm SPGun
    RegisterPattern("SU122_SPGunCalibreBullet",
      new #BulletController<CSU122_SPGunCalibreBulletControl>());
    RegisterPattern("SU122_SPGunCalibreBulletDebris",
      new #BulletController<CSU122_SPGunCalibreBulletDebrisControl>());
    RegisterPattern("SU122_SPGunHEBullet",
      new #BulletController<CSU122_SPGunHEBulletControl>());
    RegisterPattern("SU122_SPGunHEBulletDebris",
      new #BulletController<CSU122_SPGunHEBulletDebrisControl>());

        //ML 122mm FieldGun
    RegisterPattern("GunML19_122mmGunCalibreBullet",
      new #BulletController<CGunML19_122mmGunCalibreBulletControl>());
    RegisterPattern("GunML19_122mmGunCalibreBulletDebris",
      new #BulletController<CGunML19_122mmGunCalibreBulletDebrisControl>());
/*    RegisterPattern("GunML19_122mmGunSubCalibreBullet",
      new #BulletController<CGunML19_122mmGunSubCalibreBulletControl>());  */
    RegisterPattern("GunML19_122mmGunHEBullet",
      new #BulletController<CGunML19_122mmGunHEBulletControl>());
    RegisterPattern("GunML19_122mmGunHEBulletDebris",
      new #BulletController<CGunML19_122mmGunHEBulletDebrisControl>());

     //ML20 152mm FieldGun
    RegisterPattern("GunML20_152mmGunHEBullet",
    new #BulletController<CGunML20_152mmGunHEBulletControl>());
    RegisterPattern("GunML20_152mmGunHEBulletDebris",
    new #BulletController<CGunML20_152mmGunHEBulletDebrisControl>());

     //ML20 152mm Fake FieldGun
    RegisterPattern("GunML20_152mmFakeGunHEBullet",
    new #BulletController<CGunML20_152mmFakeGunHEBulletControl>());

     /*LandMINE_AT
    RegisterPattern("LandMINE_ATGunHEBullet",
    new #BulletController<CLandMINE_ATGunHEBulletControl>());
    RegisterPattern("LandMINE_ATGunHEBulletDebris",
    new #BulletController<CLandMINE_ATGunHEBulletDebrisControl>());  */

     //Mortar 100mm   Gun120mmMortarGunHEBullet
    RegisterPattern("Gun120mmMortarGunHEBullet",
    new #BulletController<CGun120mmMortarGunHEBulletControl>());
    RegisterPattern("Gun120mmMortarGunHEBulletDebris",
    new #BulletController<CGun120mmMortarGunHEBulletDebrisControl>());

     //Mortar 100mm   Gun82mmMortarGunHEBullet
    RegisterPattern("Gun82mmMortarGunHEBullet",
    new #BulletController<CGun82mmMortarGunHEBulletControl>());
    RegisterPattern("Gun82mmMortarGunHEBulletDebris",
    new #BulletController<CGun82mmMortarGunHEBulletDebrisControl>());

     //sIG33 150mm FieldGun
    RegisterPattern("Gun_sIG33GunHEBullet",
    new #BulletController<CGun_sIG33GunHEBulletControl>());
    RegisterPattern("Gun_sIG33GunHEBulletDebris",
    new #BulletController<CGun_sIG33GunHEBulletDebrisControl>());
    
         //FH18 150mm FieldGun
    RegisterPattern("GunFH18_150mmGunHEBullet",
    new #BulletController<CGunFH18_150mmGunHEBulletControl>());
    RegisterPattern("GunFH18_150mmGunHEBulletDebris",
    new #BulletController<CGunFH18_150mmGunHEBulletDebrisControl>());


     //HvyK18_105mm  FieldGun
    RegisterPattern("GunHvyK18_105mmGunHEBullet",
    new #BulletController<CGunHvyK18_105mmGunHEBulletControl>());
    RegisterPattern("GunHvyK18_105mmGunHEBulletDebris",
    new #BulletController<CGunHvyK18_105mmGunHEBulletDebrisControl>());

    //RK27_76mm
    RegisterPattern("GunRK27_76mmGunCalibreBullet",
      new #BulletController<CGunRK27_76mmGunCalibreBulletControl>());
    RegisterPattern("GunRK27_76mmGunCalibreBulletDebris",
      new #BulletController<CGunRK27_76mmGunCalibreBulletDebrisControl>());
   // RegisterPattern("GunRK27_76mmGunHEBullet",
    //  new #BulletController<CGunRK27_76mmGunHEBulletControl>());
   // RegisterPattern("GunRK27_76mmGunHEBulletDebris",
    //  new #BulletController<CGunRK27_76mmGunHEBulletDebrisControl>());

    // Nebelwerfer
    RegisterPattern("Nebelwerfer150mmMissile",
      new #BulletController<CNebelwerfer150mmMissileControl>());
    RegisterPattern("Nebelwerfer150mmMissileDebris",
      new #BulletController<CNebelwerfer150mmMissileDebrisControl>());

 // BM13 Katusha
        RegisterPattern("BM13KatyushaGunCalibreBullet",
      new #BulletController<CBM13KatyushaGunCalibreBulletControl>());
    RegisterPattern("BM13KatyushaGunCalibreBulletDebris",
      new #BulletController<CBM13KatyushaGunCalibreBulletDebrisControl>());

    //Airplane  CIL2AirBombControl
    
/*      RegisterPattern("AirBomb",   //
      new #BulletController<CAirBombControl>());  */

      RegisterPattern("IL2AirBomb",
      new #BulletController<CIL2AirBombControl>());

//      RegisterPattern("IL2MachineGunBullet", //
//      new #BulletController<CIL2MachineGunBulletControl>());  //


      RegisterPattern("TankPanzer_IICGunSubCalibreBullet",
      new #BulletController<CTankPanzer_IICGunSubCalibreBulletControl>());

    //  RegisterPattern("IL2GunSubCalibreBullet",
    //  new #BulletController<CIL2GunSubCalibreBulletControl>());

      RegisterPattern("CFW190AirBombControl",  //
      new #BulletController<CFW190AirBombControl>());  
           //
      RegisterPattern("FW190MachineGunBulletControl", //
      new #BulletController<CFW190MachineGunBulletControl>());  //
      
     // RegisterPattern("Ju87_B2MachineGunBulletControl",
     // new #BulletController<CJu87_B2MachineGunBulletControl>());

    // FuelFire bomb
    //  RegisterPattern("FireBomb",
     // new #BulletController<CFireBombControl>());

      RegisterPattern("Me_Bf110AirBomb",
      new #BulletController<CMe_Bf110AirBombControl>());
      
      RegisterPattern("Ju87_B2AirBomb",
      new #BulletController<CJu87_B2AirBombControl>());
      
      RegisterPattern("Ju87_B2AirBombB",
      new #BulletController<CJu87_B2AirBombControlB>());
      
      RegisterPattern("IL4_Med_BomberAirBomb",
      new #BulletController<CIL4_Med_BomberAirBombControl>());

      RegisterPattern("Pe8_Hvy_BomberAirBomb1",
      new #BulletController<CPe8_Hvy_BomberAirBombControl1>());

      RegisterPattern("Pe8_Hvy_BomberAirBomb2",
      new #BulletController<CPe8_Hvy_BomberAirBombControl2>());

     RegisterPattern("DotConcreteMachineGunFakeBullet",
       new #BulletController<CDotConcreteMachineGunFakeBulletControl>());


    //human unit
    // Fake weapons
     RegisterPattern("GermanSoldierRifleFakeBullet",
       new #BulletController<CGermanSoldierRifleFakeBulletControl>());
     RegisterPattern("SovietSoldierRifleFakeBullet",
       new #BulletController<CSovietSoldierRifleFakeBulletControl>());
  }
}

