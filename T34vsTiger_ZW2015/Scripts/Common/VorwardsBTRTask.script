class CVorwardsBTRTask extends  CBaseAIBtrTask    //**
{

  void Init()
  {
    //initialize base settings
    CBaseAIBtrTask::Init();
   // ActivateMovement(true);
   // SetEnemyReactionType(ERT_AGGRESSIVE);   
    //ActivateRadar(true);
    //ActivateFire(true);

    sendEvent(30.0, getIdentificator(user), "moveToMe", []);
   }

  event void moveToMe()
  {
    Component mission = GetMission();
    Vector User_Pos  = getPosition(mission.GetObject(getIdentificator(user))).origin;
    Vector XYRank =  new Vector( -8.0, -14.0, 0.0 );     // new Vector(-15.0, 0.0, 0.0);
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector Master = PlayerOrigin + XYRank ;
    if ((User_Pos - PlayerOrigin).Magnitude() >20.0)
    {
     SetOrder_MoveTo_Direct((Master), 4.5f );                  //
     sendEvent(5.0, getIdentificator(user), "OrderUp1", []);
    }
    else
    sendEvent(30.0, getIdentificator(user), "moveToMe", []);

  }

  event void OrderUp1()
  {
  sendEvent(8.0, getIdentificator(user), "moveToMe", []);
  }
  
}
/*
class CVorwardsBTR2Task extends  CBaseAIBtrTask    //**
{

  void Init()
  {
    //initialize base settings
    CBaseAIBtrTask::Init();
   // ActivateMovement(true);
   // SetEnemyReactionType(ERT_AGGRESSIVE);   
   // ActivateRadar(true);
  //  ActivateFire(true);

    sendEvent(31.0, getIdentificator(user), "moveToMe2", []);
   }

    event void moveToMe2()
  {
    Component mission = GetMission();
    Vector User_Pos  = getPosition(mission.GetObject(getIdentificator(user))).origin;
    Vector XYmov =  new Vector( -18.0, -0.0, 0.0 );     // new Vector(-15.0, 0.0, 0.0);
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector Master = PlayerOrigin + XYmov ;
        //move to player   * 0.9995
    if ((User_Pos - PlayerOrigin).Magnitude() > 24.0)
    {
     SetOrder_MoveTo((Master), 4.5f );
     sendEvent(10.0, getIdentificator(user), "OrderUp2", []);
    }
    else
    sendEvent(30.0, getIdentificator(user), "moveToMe2", []);
  }

  event void OrderUp2()
  {
  sendEvent(12.0, getIdentificator(user), "moveToMe2", []);
  }
} */

