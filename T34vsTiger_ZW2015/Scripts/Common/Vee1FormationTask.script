class CVeeFormationTask extends CBaseAITankTask, CBaseAITask    //**
{


  void Init()
  {
    //initialize base settings

    CBaseAITankTask::Init();
    CBaseAIBtrTask::Init();
    // SetEnemyReactionType(ERT_AGGRESSIVE);
    float CollisionRadius = 12.0;
    // ActivateFire(true);
    ActivateMovement(true);
    CBaseAITask::Init();
    sendEvent(10.0, getIdentificator(user), "VeePositionTsk", []);
   }


  event void VeePositionTsk()
  {
    Component mission = GetMission();

     //check is tank seing an enemy and attacking it. If that he should not move      /* */
    String TargetedEnemy = GetTargetedEnemy();
     if(TargetedEnemy != "")
     return;
     //get player tank position
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-8.66, -13.98, 0);
    Vector  PositionVec =  PlayerOrigin + disp;
    SetOrder_MoveTo((PositionVec), 4.0f );
    //call this function again after 10 seconds
    sendEvent(20.0, getIdentificator(user), "VeePositionTsk", []);

  }

 }

class CVee1FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {

    ActivateMovement(true);
    // ActivateFire(true);
    CBaseAITask::Init();
    sendEvent(20.0, getIdentificator(user), "PointVecOne", []);
   }
  event void PointVecOne()
  {
  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-14.98, 0.0, 0);
    Vector  Form1Vec =  disp + PlayerOrigin;
    SetOrder_MoveTo((Form1Vec), 4.5f );
    sendEvent(11.0, getIdentificator(user), "PointVecOne", []);
  }
}

class CVee2FormationTask extends CBaseAITankTask, CBaseAITask
{

   void Init()
  {

    ActivateMovement(true);
    // ActivateFire(true);
    CBaseAITask::Init();
    sendEvent(22.0, getIdentificator(user), "PointVecTwo", []);
   }

  event void PointVecTwo()
  {
   Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-14.98, 4.98, 0);
    Vector  Form2Vec =  disp + PlayerOrigin;
    SetOrder_MoveTo((Form2Vec), 4.5f );
    sendEvent(12.0, getIdentificator(user), "PointVecTwo", []);
  }
}
class CVee3FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {

   ActivateMovement(true);
   // ActivateFire(true);
   CBaseAITask::Init();
   sendEvent(24.0, getIdentificator(user), "PointVecThree", []);
  }
  event void PointVecThree()
  {
  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-18.98, -6.98, 0);
    Vector  Form3Vec =  disp + PlayerOrigin;
    SetOrder_MoveTo((Form3Vec), 4.5f );
    sendEvent(13.0, getIdentificator(user), "PointVecThree", []);
  }
}

class CVee4FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {

    ActivateMovement(true);
    // ActivateFire(true);
    CBaseAITask::Init();
    sendEvent(26.0, getIdentificator(user), "PointVecFore", []);
   }

  event void PointVecFore()
  {

  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-18.98, 6.98, 0);
    Vector  Form4Vec =  disp + PlayerOrigin;
    SetOrder_MoveTo((Form4Vec), 4.5f );
    sendEvent(14.0, getIdentificator(user), "PointVecFore", []);
  }
}
class CVee5FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {

    ActivateMovement(true);
    // ActivateFire(true);
    CBaseAITask::Init();
    sendEvent(28.0, getIdentificator(user), "PointVecFive", []);
   }

  event void PointVecFive()
  {

  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-20.98, 14.98, 0);
    Vector  Form5Vec = disp + PlayerOrigin;
    SetOrder_MoveTo((Form5Vec), 4.5f );
    sendEvent(15.0, getIdentificator(user), "PointVecFive", []);
  }
}

class CVee6FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {

    ActivateMovement(true);
    // ActivateFire(true);
    CBaseAITask::Init();
    sendEvent(30.0, getIdentificator(user), "PointVecSix", []);
   }

  event void PointVecSix()
  {

  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-20.98, -14.98, 0);
    Vector  Form6Vec = disp + PlayerOrigin;
    SetOrder_MoveTo((Form6Vec), 4.5f );
    sendEvent(16.0, getIdentificator(user), "PointVecSix", []);
  }
}
class CVee7FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {

    ActivateMovement(true);
    // ActivateFire(true);
    CBaseAITask::Init();
    sendEvent(32.0, getIdentificator(user), "PointVecSeven", []);
   }

  event void PointVecSeven()
  {

  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-24.98, 20.98, 0);
    Vector  Form7Vec = disp + PlayerOrigin ;
    SetOrder_MoveTo((Form7Vec), 4.5f );
    sendEvent(17.0, getIdentificator(user), "PointVecSeven", []);
  }
}

class CVee8FormationTask extends CBaseAITankTask, CBaseAITask
{

  void Init()
  {  

  ActivateMovement(true);
  // ActivateFire(true);
  CBaseAITask::Init();
  sendEvent(34.0, getIdentificator(user), "PointVecEight", []);
   }

  event void PointVecEight()
  {
  Component mission = GetMission();
    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-24.98, -20.98, 0);
    Vector  Form8Vec =  disp + PlayerOrigin;
    SetOrder_MoveTo((Form8Vec), 4.5f );
    sendEvent(18.0, getIdentificator(user), "PointVecEight", []);
  }
}

class CVeeWMFormationTask extends CBaseUtilities, CBaseAITankTask, CBaseAITask
{
   void Init()   /*   */
  {
    CBaseAITankTask::Init();
    ActivateMovement(true);
    // ActivateFire(true);
    float CollisionRadius = 12.0;
    sendEvent(36.0, getIdentificator(user), "PointRIGHTVecWM", []);
   }

  event void PointRIGHTVecWM()
  {
  Component mission = GetMission();

     //check is tank seing an enemy and attacking it. If that he should not move      /* */
    String TargetedEnemy = GetTargetedEnemy();
     if(TargetedEnemy != "")
     {
     return;
     }

    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-32.98, -32.98, 0);
    Vector  Form8Vec =  disp + PlayerOrigin;

    SetOrder_MoveTo((Form8Vec), 4.5f );
    sendEvent(30.0, getIdentificator(user), "PointRIGHTVecWM", []);
    }

}

class CVeeWM2FormationTask extends CBaseUtilities, CBaseAITankTask, CBaseAITask
{
   void Init()   /*   */
  {
    CBaseAITankTask::Init();
    ActivateMovement(true); 
    // ActivateFire(true);
    float CollisionRadius = 12.0;
    sendEvent(36.0, getIdentificator(user), "PointLEFTVecWM", []);
   }

  event void PointLEFTVecWM()
  {
  Component mission = GetMission();

     //check is tank seing an enemy and attacking it. If that he should not move      /* */
    String TargetedEnemy = GetTargetedEnemy();
     if(TargetedEnemy != "")
     {
     return;
     }

    Vector PlayerOrigin  = getPosition(mission.GetObject(mission.GetMainPlayerObjectID())).origin;
    Vector disp = new Vector(-32.98, 32.98, 0);
    Vector  Form8Vec =  disp + PlayerOrigin;

    SetOrder_MoveTo((Form8Vec), 4.5f );
    sendEvent(30.0, getIdentificator(user), "PointLEFTVecWM", []);
    }

}