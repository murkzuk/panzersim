//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.  ,CBaseFenceObject  CBaseDestructableFenceObject       
//
//-------------------------------------------------------------------

class CBridgeCementUnit extends CBaseDestructableBridgeSecObject ,CGroundBuilding
{
      final static float DefaultHitPoints = -1;
  // Automatic classificators of this object  
  final static Array AutomaticClassificators = ["BRIDGE_STRUCTURE"];

  static String  m_SectionName     = "CenterSection";
  static String  m_StartSection    = "StartSection";
  static String  m_FinishSection   = "EndSection";
  
  static String  m_DamagedSectionName     = "Collision_CenterSection";
  static String  m_DamagedStartSection    = "Collision_StartSection";
  static String  m_DamagedFinishSection   = "Collision_EndSection";      /* */
   
  final static String SubstanceClass = "CGroundSubstance";

  static int     m_InitSize        = 5;
  final static String DefaultSurfaceControl      = "PutonGroundUpright";

void CBridgeCementUnit()
  {
    SetupMesh(new #GridObject<Cbld_BridgeCementModel>([1]));
  }
  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    CGroundBuilding::Construct(_Mission, _PropMap);

    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BULLET762792, 0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BULLET127,    0.0);

    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_CALIBREBULLET7576,    0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_CALIBREBULLET85,      0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_CALIBREBULLET88,      0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_SUBCALIBREBULLET7576, 0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_SUBCALIBREBULLET85,   0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_SUBCALIBREBULLET88,   0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_HEBULLET7576,         0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_HEBULLET85,           0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_HEBULLET88,           0.0);
 
         SetupDestroyController(
      "CGroundSubstance",
      10000.0, 0.0,ComputeTouchParams( 0.0f, 0.0f),  // house mass   // damage energy: more than - damage trigger    // destroy energy: more than - destroy trigger

      [
      ]
    );
       }

}

