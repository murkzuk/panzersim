//-------------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-------------------------------------------------------------------

// Unit Explosion
class CDotchaC3_WoodUnitExplosion
  extends CUSRHouseWoodExplosion
{
  float Damage = 100.0;
  float Radius = 15.0;
  String    SoundId  = "USRCorralWoodExplosionSound";
}

class CDotchaC3_WoodUnit extends CComplexDestructibleBuilding
{

   String m_NormalSetId  = "Normal_Set";    //
   String m_CrashedSetId = "Crashed_Set"; //

  final static String BodyJoint   = "Base";
  final static String CrashedJoint   = "crashed";


  final static String DefaultSurfaceControl = "PutonGroundLandingJoints";

static Array LandingJoints = ["GroundLevel"];

  final static float DefaultHitPoints = CHitPoints::USRHouseWoodUnitHitPoints; //CHitPoints::USRHouseWoodUnitHitPoints; CHitPoints::DotchaC3_WoodUnitHitPoints; BuildingExplosionEffect"BaseBuildingExplosionEffect""GenericSmallFireSmokeRefuseEffect"["GenericSmallFireSmokeRefuseEffect ",CGenericLargeFireEffect  BuildingSmokeRefuseEffect


  static Array PrevExplosionID = [
                                     ["", "USRCorralWoodExplosion"]
                                 ];
  static Array PrevDeathEffect = [
                                   ["",                  "BaseBuildingExplosionEffect"],
                                   ["StackC",            "ExplosionDustRingEffect"],
                                   ["wall1",             "BuildingSmokeRefuseEffect"],
                                   ["wall4",             "BuildingSmokeRefuseEffect"],
                                   ["",                  "GenericLargeFirePostSmokeRefuseEffect"]
                                      ];


  //static category UnitType = CLASSIFICATOR_T34_UNIT;

  // Automatic classificators of this object
  final static Array AutomaticClassificators  =       ["GROUND", "BLD_CIV", "RU"];  // //     ["STRUCTURE"];


    // =======================================
  // Contruction and initialization
  // =======================================
  void CDotchaC3_WoodUnit()
  {
    SetupMesh(new #AnimatedObject<Cbld_Dacha3_CModel>(), [1]);

  }
  void Construct(
      Component _Mission,
      Component _PropMap
    )
  {
    //  CGroundBuilding::Construct(_Mission, _PropMap);
   CComplexDestructibleBuilding::Construct(_Mission, _PropMap);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BULLET762792, 0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BULLET127,    0.0);

    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_SUBCALIBREBULLET7576, 0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_SUBCALIBREBULLET85,   0.0);
    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_SUBCALIBREBULLET88,   0.0);


    GetDamageHandler().SetDamageTypeModifier(CBaseExplosion::CLASSIFICATOR_DAMAGE_BUILDING, 1.0);
    SetupDestroyController(
      "CWoodSubstance",
      2700.0,  // house mass
      100,  // damage energy: more than - damage trigger
       ComputeTouchParams(100.0, 40.01), // destroy energy: more than - destroy trigger
      [
        new CDestructibleBuildingItem("Base",           CDestructibleBuildingItem::NormalType),
        new CDestructibleBuildingItem("crashed",        CDestructibleBuildingItem::FixedType),
        new CDestructibleBuildingItem("wall2",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("wall3",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("wall4",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("wall5",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("Roof1",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("Roof3",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("crashedBase",   CDestructibleBuildingItem::FixedType),
        new CDestructibleBuildingItem("wall1",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("Roof2",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("Stack_crashed",   CDestructibleBuildingItem::DamageType),
        new CDestructibleBuildingItem("Roofend1",   CDestructibleBuildingItem::DamageType)

      ]
    );    /* */
    SetCrashAnimationTime(0.6);
  }
}
