//-----------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law.
//
//-----------------------------------------------------------------
class CC5M3PRussianPanzer extends CPositionWatcher, CBaseUtilities
{
 /*  final static String Positionable  = "MainPlayerUnit";                     // кто следимт
  final static Array  ControlPoints = ["CC5M3RusGroup1_Tank1", "CC5M3RusGroup1_Tank2", "CC5M3RusGroup1_Tank3", "CC5M3RusGroup1_Tank4", "CC5M3RusGroup1_Tank5", "CC5M3RusGroup2_Tank1", "CC5M3RusGroup2_Tank2", "CC5M3RusGroup2_Tank3", "CC5M3RusGroup2_Tank4", "CC5M3RusGroup2_Tank5", "CC5M3RusGroup3_Tank1", "CC5M3RusGroup3_Tank2", "CC5M3RusGroup3_Tank3", "CC5M3RusGroup3_Tank4", "CC5M3RusGroup3_Tank5"];

  float distanceForFight = 1200;
  float distancePlayer; //
  float distanceTank1;
  float distanceTank2;
  float distanceTank3;
  float distanceTank4;//
  float distanceTank5; 
//  float distancePlayer2;


  Initialize(Component _Mission, String _Name)
  {
//    if (GetMission().isDebug)
//      logWarning("CC5M3PRussianPanzer::Initialize");

    CPositionWatcher::Initialize(_Mission, _Name);
    GetMission().GetObject("CC5M3PRussianPanzer").SetUpdatePeriod(25000);
  }

  void Update(Component _Watcher)
  {
    Array PointInfo    = _Watcher.GetPointInfo(0);
    Array PositionInfo = _Watcher.GetPositionInfo();

    PointRegionChanged(_Watcher, 0, PointInfo[INDEX_RegionMask]);
  }

  void PointRelativeSpeedChanged(Component _PositionWatcher, int _Point, float _RelativeSpeed)
  {
  }

  void PointRegionChanged(
    Component _PositionWatcher,
    int       _Point,
    int       _RegionMask
    )
  {
    Array PointInfo = _PositionWatcher.GetPointInfo(_Point);

    Array PointInfoMPU = _PositionWatcher.GetPointInfo(0);
    Array PointInfo1   = _PositionWatcher.GetPointInfo(1);
    Array PointInfo2   = _PositionWatcher.GetPointInfo(2);
    Array PointInfo3   = _PositionWatcher.GetPointInfo(3);
    Array PointInfo4   = _PositionWatcher.GetPointInfo(4);
    Array PointInfo5   = _PositionWatcher.GetPointInfo(5);

    distancePlayer = PointInfoMPU[INDEX_Distance];
    distanceTank1 = PointInfo1[INDEX_Distance];
    distanceTank2 = PointInfo2[INDEX_Distance];
    //distanceTank3 = PointInfo3[INDEX_Distance];
    //distanceTank4 = PointInfo4[INDEX_Distance];
    //distanceTank5 = PointInfo5[INDEX_Distance];

   
    logError("CC5M3PRussianPanzer distancePlayer = " + new String(distancePlayer));
    logError("CC5M3PRussianPanzer distanceTank1 = " + new String(distanceTank1));
    logError("CC5M3PRussianPanzer distanceTank2 = " + new String(distanceTank2));
    logError("CC5M3PRussianPanzer distanceTank3 = " + new String(distanceTank3));
    logError("CC5M3PRussianPanzer distanceTank4 = " + new String(distanceTank4));
    loError("CC5M3PRussianPanzer distanceTank5 = " + new String(distanceTank5));
     
    if(
        distancePlayer < distanceForFight ||
        distanceTank1 < distanceForFight ||
        distanceTank2 < distanceForFight //||
        //distanceTank3 < distanceForFight ||
        //distanceTank4 < distanceForFight ||
        //distanceTank5 < distanceForFight
        )
    {
      if(!GetMission().StartFightStug)
      {
        sendEvent(0.0, SOID_MissionController, "StartFightStug", []);
        GetMission().ShutdownWatcher("CC5M3PRussianPanzer");
      }
    }
  }*/
}
