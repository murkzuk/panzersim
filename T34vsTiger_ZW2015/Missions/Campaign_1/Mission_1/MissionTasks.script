//-----------------------------------------------------------------
//
//  This code is copyright 2001 by G5 Software.
//  Any unauthorized usage, either in part or in whole of this code
//  is strictly prohibited. Violators WILL be prosecuted to the
//  maximum extent allowed by law. C_RU_BomberGrp_1_C1M1
//
//-----------------------------------------------------------------

class C1M1Gr_SupplyLine extends CBaseUnitGroup //, CBaseAITankTask
{

    void Init()
  {
    SetEnemyReactionType(ERT_FRIGID);   
  //  sendEvent(70.0, getIdentificator(user), "MoveToAttackPosition", []);
  }

   event void MoveToAttackPosition()
   {
    CBaseAITask::Init();
    ActivateMovement(true);
    ActivateRadar(true);
    float Speed  = 4.500000f;
    SetFormation("Column", 44.0, true, true);
    Array ApproachPoints = [
                    GetNavPointBehPos("NavPnt5"),
                    GetNavPointBehPos("NavPnt51"),
                    GetNavPointBehPos("NavPnt6"),
                    GetNavPointBehPos("NavPnt7"),
                    GetNavPointBehPos("NavPnt8"),
                    GetNavPointBehPos("NavPnt91"),
                    GetNavPointBehPos("NavPntTen"),
                    GetNavPointBehPos("NavPnt_11"),
                    GetNavPointBehPos("NavPnt_12"),
                    GetNavPointBehPos("NavPnt_13")
                    ];                            // "NavPnt5", "NavPnt51","NavPnt6","NavPnt7","NavPnt8","NavPnt9","NavPnt91","NavPntTen","NavPnt_11", "NavPnt_12", "NavPnt_13"

    SetFirstQueueOrders([
                        ["C1M1Gr_SupplyLine", "SetOrder_MoveToEx", [ApproachPoints, Speed], ""],
                        ["C1M1Gr_SupplyLine", "", [], ""]
                      ]);

    }
  void OnPathEndReached()
  {
    SetEnemyReactionType(ERT_FRIGID);
   // sendEvent(0.0, "CC1M1Grp_MobilGuns_A", "MoveToAttackPosition", []);
    ShowOpel(true);
  }
}

class C1M1Gr_SupplyEndLine extends CBaseUnitGroup //, CBaseAITankTask
{

    void Init()
  {
    SetEnemyReactionType(ERT_FRIGID);
  //  sendEvent(70.0, getIdentificator(user), "MoveToAttackPosition", []);
  }

   event void MoveToAttackPosition()
   {
    CBaseAITask::Init();
    ActivateMovement(true);
    ActivateRadar(true);
    float Speed  = 4.500000f;
    SetFormation("Column", 44.0, true, false);
    Array ApproachPoints = [
                    GetNavPointBehPos("NavPnt5"),
                    GetNavPointBehPos("NavPnt51"),
                    GetNavPointBehPos("NavPnt6"),
                    GetNavPointBehPos("NavPnt7"),
                    GetNavPointBehPos("NavPnt8"),
                    GetNavPointBehPos("NavPnt91"),
                    GetNavPointBehPos("NavPntTen"),
                    GetNavPointBehPos("NavPnt_11"),
                    GetNavPointBehPos("NavPnt_12"),
                    GetNavPointBehPos("NavPnt_13")
                    ];                            // "NavPnt5", "NavPnt51","NavPnt6","NavPnt7","NavPnt8","NavPnt9","NavPnt91","NavPntTen","NavPnt_11", "NavPnt_12", "NavPnt_13"

    SetFirstQueueOrders([
                        ["C1M1Gr_SupplyLine", "SetOrder_MoveToEx", [ApproachPoints, Speed], ""],
                        ["C1M1Gr_SupplyLine", "", [], ""]
                      ]);

    }
  void OnPathEndReached()
  {
    SetEnemyReactionType(ERT_FRIGID);
   // sendEvent(0.0, "CC1M1Grp_MobilGuns_A", "MoveToAttackPosition", []);

  }
}

class CC1M1PanzerGrupen1 extends CBaseUnitGroup, CBaseAITankTask
{
    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
    //sendEvent(10.0, getIdentificator(user), "MoveToAttackPosition", []);
  }

/*   event void MoveToAttackPosition()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
    SetFormation("CNarrowWedgeFormation", 50.0, true, false);
    float AttackSpeed  = 4.500000f;
    Array ApproachPoints = [
                    GetNavPointBehPos("NavPnt6"),
                    GetNavPointBehPos("NavPnt7"),
                    GetNavPointBehPos("NavPnt8"),
                    GetNavPointBehPos("NavPnt9"),
                    GetNavPointBehPos("NavPnt91")
                    ];

    SetFirstQueueOrders([
                        ["CC1M1PanzerGrupen1", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["CC1M1PanzerGrupen1", "", [], ""]
                      ]);

  }
   event void MoveToSafePosition()
  {
    CancelAllOrders();
    CBaseUnitGroup::Init();
    ActivateMovement(true);
    SetEnemyReactionType(ERT_PASSIVE);
    //SetFormation("CNarrowWedgeFormation", 50.0, true, false);
    float AttackSpeed  = 4.500000f;
    Array ApproachPoints = [
                    GetNavPointBehPos("NavPntTen"),
                    GetNavPointBehPos("NavPnt_11"),
                    GetNavPointBehPos("NavPnt_12")/* ,
                    GetNavPointBehPos("NavPnt_13")     
                    ];
    
    SetFirstQueueOrders([
                        ["CC1M1PanzerGrupen1", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["CC1M1PanzerGrupen1", "", [], ""]
                      ]);
    sendEvent(35.0, "CC1M1PanzerGrupen2", "MoveToSafePosition", []);
  } */
}

class CC1M1PanzerGrupen2 extends CBaseUnitGroup, CBaseAITankTask
{
   // boolean isAGGRESSIVE;
    
    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
   // isAGGRESSIVE = false;
   // sendEvent(10.0, getIdentificator(user), "MoveToAttackPosition", []);  // replaced 6-22-09
  }

/*   event void MoveToAttackPosition()
   {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
  //  SetEnemyReactionType(ERT_AGGRESSIVE);
    SetFormation("CNarrowWedgeFormation", 60.0, true, true);
    float AttackSpeed  = 4.500000f;
    Array ApproachPoints = [
                    GetNavPointBehPos("NavPnt6"),
                    GetNavPointBehPos("NavPnt7"),
                    GetNavPointBehPos("NavPnt8"),
                    GetNavPointBehPos("NavPnt9")
                    ];                         //"NavPnt5_6","NavPnt6","NavPnt7","NavPnt8","NavPnt9","NavPnt91", "NavPntTen","NavPnt_11" ,"NavPnt_12", "NavPnt_13"

    SetFirstQueueOrders([
                        ["C1M1PanzerGrupen2", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["C1M1PanzerGrupen2", "", [], ""]
                      ]);

    }

   event void MoveToSafePosition()
  {
    CancelAllOrders();
    CBaseUnitGroup::Init();
    ActivateMovement(true);
    SetEnemyReactionType(ERT_PASSIVE);
    isAGGRESSIVE = false;
    float AttackSpeed  = 4.500000f;
    Array ApproachPoints = [
                    GetNavPointBehPos("NavPntTen"),
                    GetNavPointBehPos("NavPnt_11"),
                    GetNavPointBehPos("NavPnt_12"),
                    GetNavPointBehPos("NavPnt_13")      
                    ];

    SetFirstQueueOrders([
                        ["CC1M1PanzerGrupen2", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["CC1M1PanzerGrupen2", "", [], ""]
                      ]);

  }
   event void GoAGGRESSIVE()
  {
   SetEnemyReactionType(ERT_AGGRESSIVE);
   isAGGRESSIVE = true;
  }

    void OnUnitHitByEnemy(String _UnitID, String _EnemyID)  // calles when unit (member of the group) hit by enemy
  {
   if (!isAGGRESSIVE)
   sendEvent(0.0, getIdentificator(user), "GoAGGRESSIVE", []);

    // return isActive;
  } */
}
class CC1M1Grp_Hummel_A extends CBaseUnitGroup, CBaseAISAUTask
{

 //  boolean isAGGRESSIVE;

    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(false);
    SetEnemyReactionType(ERT_PASSIVE);
  //  isAGGRESSIVE = false;
   // sendEvent(180.0, getIdentificator(user), "GoAGGRESSIVE", []);  //  //
  }

/*   event void MoveToAttackPosition()
   {
    CBaseUnitGroup::Init();
    CancelAllOrders();
    ActivateRadar(false);
    ActivateFire(false);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_FRIGID);
    SetFormation("Column", 35.0, false, false);          //      CNarrowWedgeFormation
    float AttackSpeed  = 4.500000f;
    Array ApproachPoints = [
                     GetNavPointBehPos("NavPnt91"),
                     GetNavPointBehPos("NavPntTen"),
                     GetNavPointBehPos("NavPnt_11"),
                     GetNavPointBehPos("NavPnt_12"),//
                     GetNavPointBehPos("NavPnt_FIRE")  // //

                    ];                         //"NavPnt5_6","NavPnt6","NavPnt7","NavPnt8","NavPnt9","WarZone"

    SetFirstQueueOrders([
                        ["CC1M1Grp_Hummel_A", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["CC1M1Grp_Hummel_A", "", [], ""]
                      ]);

    }


  event void Take2Stand()
  {
    CancelAllOrders();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_PASSIVE);
 //   ForEachUnitTask("SetOrder_Guard", [ GetNavPointBehPos("NavPnt_12"), 50.0f, 3.5, 100 ]);

  } */

}

class CC1M1Grp_MobilGuns_A extends CBaseUnitGroup, CBaseAISAUTask, CBaseAITankTask   //
{

 //  boolean isAGGRESSIVE;

    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);

  }

/*   event void MoveToAttackPosition()
   {
    CBaseUnitGroup::Init();
    CancelAllOrders();
    ActivateRadar(false);
    ActivateFire(false);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_FRIGID);
    SetFormation("Column", 35.0, false, false);          //  CNarrowWedgeFormation    "NavPnt_FIRE",
    float AttackSpeed  = 4.500000f;
    Array ApproachPoints = [
                     GetNavPointBehPos("NavPnt91"),
                     GetNavPointBehPos("NavPntTen"),
                     GetNavPointBehPos("NavPnt_11") , //
                     GetNavPointBehPos("NavPnt_12"),
                     GetNavPointBehPos("NavPnt_FIRE")

                    ];                         //"NavPnt5_6","NavPnt6","NavPnt7","NavPnt8","NavPnt9","WarZone"

    SetFirstQueueOrders([
                        ["CC1M1Grp_MobilGuns_A", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["CC1M1Grp_MobilGuns_A", "", [], ""]
                      ]);

    }

  event void TakeStand()
  {
    CancelAllOrders();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_PASSIVE);
 //   ForEachUnitTask("SetFireStyle_Nearest", []);
    sendEvent(11.0, "CC1M1Grp_Hummel_A", "Take2Stand", []);
  }  */

}


class C1M1NebalTask extends CBaseAITask, CReFillTask
{

}

 class C1M1SSTrooperGroup extends CBaseUnitGroup, CBaseAITask      //
{

    void Init()
  {
    CBaseUnitGroup::Init();
   }
   event void InitPhase3()
    {
     Activatemovment (true);
     PopDelayedOrder();
    SetOrder_MoveTo(GetNavPointBehPos(""), 3.0, true);
    }

}

//-------------
//  Russian Troops classes 
//-------------

class C1M1RussianSoldierGroup extends CBaseUnitGroup, CBaseAITask
{
    void Init()
  {
    CBaseUnitGroup::Init();
   }
   event void MoveToAttackPosition()
    {
     PopDelayedOrder();
     Activatemovment (true);
     SetOrder_MoveTo(GetNavPointBehPos(""), 2.2, true);
    }

}   
  class C1M1RussianSoldier2Group extends CBaseUnitGroup, CBaseAITask
{
    void Init()
  {
    CBaseUnitGroup::Init();
   }
   event void MoveToAttackPosition()
    {
    PopDelayedOrder();
    Activatemovment (true);
    SetOrder_MoveTo(GetNavPointBehPos(""), 2.2, true);
    }

}
/*
 
        ["Contents", ["RATrooper2_1", "RATrooper2_10", "RATrooper2_11", "RATrooper2_12", "RATrooper2_13", "RATrooper2_14", "RATrooper2_15", "RATrooper2_16", "RATrooper2_17", "RATrooper2_18", "RATrooper2_19", "RATrooper2_2", "RATrooper2_20", "RATrooper2_21", "RATrooper2_22", "RATrooper2_23", "RATrooper2_24", "RATrooper2_25", "RATrooper2_26", "RATrooper2_27", "RATrooper2_28", "RATrooper2_29", "RATrooper2_3", "RATrooper2_30", "RATrooper2_31", "RATrooper2_32", "RATrooper2_33", "RATrooper2_34", "RATrooper2_35", "RATrooper2_36", "RATrooper2_4", "RATrooper2_5", "RATrooper2_6", "RATrooper2_7", "RATrooper2_8", "RATrooper2_9"]],
        ["Path", [ "RearAttackPath_1", "RearAttackPath_2", "RearAttackPath_3"]],
        ["DelayedOrder", true],
        ["Formation", "CWedgeFormation"],
        ["FormationDistance", 20],
        ["MovingSpeed", 2.400000],
        ["FirstOrder", "Patrol"],
        ["CyclePath", true]    */

                                  //------------------------------------------------
                                   //----------------   USSR UNITS   ----------------
                                   //------------------------------------------------
class C1M1RedArmyGrp1_Task extends CBaseAITankTask, CBaseAITask
{

     boolean isActive;

  void Init()

  {
   // ShowUnit(false);
    CBaseAITankTask::Init();
    ActivateFire(false);
    ActivateRadar(false);
    isActive = false;
    sendEvent(35.0, getIdentificator(user), "SetActiveGroup", []);  // 1080
  }
  event void SetActiveGroup()
  {
    if (!isActive)
  //  ShowUnit(true);
    CBaseAITask::Init();
    ActivateFire(true);
    ActivateRadar(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
    isActive = true;
    sendEvent(1.0, getIdentificator(user), "PointVec2Enemy", []);
  }

  event void PointVec2Enemy()
  {
    float Radius = randnum(133.99);
    Vector RandomSTVector = new Vector(rand(Radius), rand(Radius), 0.0);
    Vector  PreDestinationEAVec =  GetNavPointBehPos("RU_AttackZone_02");
    Vector  DestinationEnemyVec = PreDestinationEAVec + RandomSTVector;
    SetOrder_MoveTo((DestinationEnemyVec), 4.2f);
    sendEvent(23.0, getIdentificator(user), "PointVec2Enemy", []);

 }
}
class CC1M1Grp_CompanyGrpONE extends CBaseUnitGroup, CBaseAITankTask
{

}

class C1M1RedArmyGrptwoTask extends CBaseAITankTask, CBaseAITask
{

     boolean isActive;

  void Init()

  {
   // ShowUnit(false);
    CBaseAITankTask::Init();
    ActivateFire(true);
    ActivateRadar(true);
    isActive = false;
    sendEvent(265.0, getIdentificator(user), "SetActiveGroup", []);  // 1080
  }
  event void SetActiveGroup()
  {
    if (!isActive)
   // ShowUnit(true);
    CBaseAITankTask::Init();
   // ActivateFire(true);
   // ActivateRadar(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
    isActive = true;
    sendEvent(1.0, getIdentificator(user), "PointVecRAG2", []);
  }

  event void PointVecRAG2()
  {
    float Radius = randnum(299.99);
    Vector RandomSTVector = new Vector(rand(Radius), rand(Radius), 0.0);
    Vector  PreDestinationEAVec =  GetNavPointBehPos("NavPnt91");   // RearAttackPath_4 CompanyGrpFOUR_NP04
    Vector  DestinationEnemyVec = PreDestinationEAVec + RandomSTVector;
    SetOrder_MoveTo((DestinationEnemyVec), 3.5f);
    sendEvent(33.0, getIdentificator(user), "PointVecRAG2", []);

 }
}

class C1M1Grp_CompanyGrpTWO extends CBaseUnitGroup, CBaseAITankTask
{


}

class C1M1Grp_Company2Platoon2 extends CBaseUnitGroup, CBaseAISAUTask     // C1M1RedArmyGrptwoTask
{


}

class C1M1_SUCompany2Task extends CBaseAITask, CBaseAISAUTask
{
    // boolean isActive;

  void Init()

  {
   // ShowUnit(false);
    CBaseAISAUTask::Init();
    ActivateFire(true);
    ActivateRadar(true);
   // isActive = false;
    sendEvent(92.0, getIdentificator(user), "SetActiveGroup", []);  // 1080
  }
  event void SetActiveGroup()
  {
    //if (!isActive)
    //ShowUnit(true);
    CBaseAISAUTask::Init();
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
  //  isActive = true;
    sendEvent(8.0, getIdentificator(user), "PointVecSUEnemy", []);
  }

  event void PointVecSUEnemy()
  {
    float RadiusX = randnum(199.99);
    float RadiusY = randnum(79.99);
    Vector RandomSTVector = new Vector(rand(RadiusX), rand(RadiusY), 0.0);
    Vector  PreDestinationEAVec =  GetNavPointBehPos("NavPnt91");
    Vector  DestinationEnemyVec = PreDestinationEAVec + RandomSTVector;
    SetOrder_MoveTo_Direct((DestinationEnemyVec), 3.0f);
    sendEvent(43.0, getIdentificator(user), "PointVecSUEnemy", []);

 }
}

class C1M1Grp_SU85_CompanyGrpTWO extends CBaseUnitGroup, CBaseAISAUTask
{

    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(true);
    ActivateFire(true);
    ActivateMovement(true);
  }

   event void MoveToAttackPosition()
   {
    CBaseUnitGroup::Init();

    SetEnemyReactionType(ERT_AGGRESSIVE);
    float AttackSpeed  = 3.50000f;
    SetFormation("CWideWedgeFormation", 60.0, false, false);       // CFrontFormation 
    Array ApproachPoints = [
                     GetNavPointBehPos("RU_AttackZone_01"),
                     GetNavPointBehPos("RU_AttackZone_02")
                     ];

    SetFirstQueueOrders([
                        ["C1M1Grp_SU85_CompanyGrpTWO", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["C1M1Grp_SU85_CompanyGrpTWO", "", [], ""]
                      ]);
  }




}

/**/
class C1M1RedArmy1_Task extends CBaseAITankTask, CBaseAITask
{

     boolean isActive;

  void Init()

  {
   // ShowUnit(false);
    CBaseAITankTask::Init();
    ActivateFire(false);
    ActivateRadar(false);
    isActive = false;
   // sendEvent(1400.0, getIdentificator(user), "ShowRedArmytank", []); //
    sendEvent(30.0, getIdentificator(user), "SetActiveGroup", []);  // 1080
  }
  event void SetActiveGroup()
  {
    if (!isActive)
  //  ShowUnit(true);
    ActivateFire(true);
    ActivateRadar(true);
    ActivateMovement(true);
    SetEnemyReactionType(ERT_AGGRESSIVE);
    isActive = true;
    sendEvent(1.0, getIdentificator(user), "PointVecEnemy", []);
  }

  event void ShowRedArmytank()
  {
    ShowUnit(true);
  }

  event void PointVecEnemy()
  {
    float Radius = randnum(99.99);
    Vector RandomSTVector = new Vector(rand(Radius), rand(Radius), 0.0);
    Vector  PreDestinationEAVec =  GetNavPointBehPos("CompanyGrpFOUR_NP04");
    Vector  DestinationEnemyVec = PreDestinationEAVec + RandomSTVector;
    SetOrder_MoveTo_Direct((DestinationEnemyVec), 4.0f);
    sendEvent(43.0, getIdentificator(user), "PointVecEnemy", []);

 }
} 

class C1M1Grp_CompanyGrpTHREE extends CBaseUnitGroup, CBaseAITankTask
{

 /*
    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateRadar(false);

  }
   event void MoveToAttackPosition()
   {
    //ShowGroup(true);
    ActivateMovement(true);
    ActivateFire(true);
    ActivateRadar(true);
    float AttackSpeed  = 3.50000f;
    SetFormation("CWedgeFormation", 40.0, false,false ); //      Column
    Array ApproachPoints = [
                     GetNavPointBehPos("RU_AttackZone_01"),   //
                     GetNavPointBehPos("RU_AttackZone_02"),
                     GetNavPointBehPos("CompanyGrpFOUR_NP05")
                    ];

    SetFirstQueueOrders([
                        ["C1M1Grp_CompanyGrpTHREE", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["C1M1Grp_CompanyGrpTHREE", "", [], ""]
                      ]);

  }

*/

}

class C1M1Grp_CompanyGrpFOUR extends CBaseUnitGroup, CBaseAITankTask
{

/* */
    void Init()
  {
    CBaseUnitGroup::Init();
    ActivateMovement(false);
    ActivateFire(true);
    ActivateRadar(true);
  }

   event void MoveToAttackPosition()
   {
    CBaseUnitGroup::Init();
    ActivateMovement(true);
    float AttackSpeed  = 3.50000f;
    SetEnemyReactionType(ERT_AGGRESSIVE);
    SetFormation("CWideWedgeFormation", 50.0, true, true);
//    SetOrder_MoveTo(GetNavPointBehPos("RU_AttackZone_01"), 3.5, true);   // CompanyGrpFOUR_NP05
    Array ApproachPoints = [
                     GetNavPointBehPos("RU_AttackZone_01"),   //
                     GetNavPointBehPos("RearAttackPath_3"),
                     GetNavPointBehPos("RearAttackPath_4")
                    ];

    SetFirstQueueOrders([
                        ["C1M1Grp_CompanyGrpFOUR", "SetOrder_MoveToEx", [ApproachPoints, AttackSpeed], ""],
                        ["C1M1Grp_CompanyGrpFOUR", "", [], ""]
                      ]);

  }
 
}

